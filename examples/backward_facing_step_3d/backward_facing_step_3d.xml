<?xml version='1.0' encoding='utf-8'?>
<testproblem>
   <name>backward facing step 3D example</name>
   <!--Runs a 3D backward facing step problem with geometry defined as in Le, Moin &amp; Kim 1997. Direct numerical simulation of turbulent flow over a backward-facing step, Journal of Fluid Mechanics.-->
  <owner userid="jbull"/>
  <tags>flml 3dadapt</tags>
  <!-- uses flml - uses 3d adaptivity -->
  <problem_definition length="vlong" nprocs="8">
    <command_line>mpiexec flredecomp -i 1 -o 8 -v -l backward_facing_step_3d backward_facing_step_3d_flredecomp &amp;&amp;
mpiexec fluidity -v2 -l backward_facing_step_3d_flredecomp.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
    </variable>
    <variable name="finishtime" language="python">from fluidity_tools import stat_parser as stat
finishtime= stat("backward_facing_step_3d.stat")["ElapsedTime"]["value"][-1]</variable>
    <variable name="reattachment_length" language="python">
from postprocessor_3d import reatt_length, get_filelist
import numpy
yarray = numpy.array([0.1, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 3.9])
exclude_initial_results = 60
filelist = get_filelist(10, 75)
reattachment_length = numpy.array(reatt_length(filelist, yarray))
    </variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">
assert(solvers_converged)
    </test>
    <test name="finish_time" language="python">
assert finishtime &gt; 199.0
    </test>
    <test name="Reattachment length is less than 20.0" language="python">
assert(abs(reattachment_length[-1,0]) &lt; 20.0)
    </test>
  </pass_tests>
  <warn_tests/>
</testproblem>

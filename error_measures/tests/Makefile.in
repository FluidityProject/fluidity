#    Copyright (C) 2006 Imperial College London and others.
#
#    Please see the AUTHORS file in the main source directory for a full list
#    of copyright holders.
#
#    Prof. C Pain
#    Applied Modelling and Computation Group
#    Department of Earth Science and Engineering
#    Imperial College London
#
#    amcgsoftware@imperial.ac.uk
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation,
#    version 2.1 of the License.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
#    USA
SHELL = @SHELL@

PACKAGE_NAME = @PACKAGE_NAME@
FLUIDITY = $(PACKAGE_NAME)

FC      = @FC@
FCFLAGS = -I../../include @FCFLAGS@ @MODINC_FLAG@../

CC  = @CC@
CFLAGS  = @CFLAGS@ -I../../include

CXX = @CXX@ -I../../include
CXXFLAGS= @CPPFLAGS@ @CXXFLAGS@ -I../include -I../../include 

LDFLAGS  = @LDFLAGS@

LIBS = ./lib/libadaptivity.a ./lib/libvtkfortran.a ./lib/libH5hutF.a ./lib/libH5hut.a @HDF5_LIBS@ @LIBSPATIALINDEX@ @SPUDLIB@ @FLIBJUDY@ @LIBS@
FLIBS = @FLIBS@
LIBFLUIDITY=../../lib/lib$(FLUIDITY).a

# the test binaries NOT to be built
DISABLED_TESTS=test_anisotropic_adaptivity test_anisotropic_adaptivity_two test_gradation test_isotropic_gradation \
  test_annulus_gradation \
  test_directional_gradation test_directional_gradation_annulus test_pseudo2d_gradation \
  test_assemble_metric test_anisotropically_bounded_metric test_backstep \
  test_quadratic_interpolation \
  test_recovery_estimator test_elementwise_error_adaptivity \
  test_boundary_layer_adaptivity test_boundary_layer_adaptivity_two \
  test_anisotropic_bounds_equivalence \
  compute_interpolation_error_noadapt compute_interpolation_error_adapt \
  compute_enstrophy_goal compute_temperature_goal compute_hessian_error \
  compute_chimney_adapt compute_les_temp_goal compute_les_velocity_goal \
  compute_mesh_conformity compute_driven_cavity_adapt test_mba compute_residual \
  test_metric_advection test_geometric_constraints  \
  compute_compare_interpolation compute_compare_interpolation_3d \
  test_anisotropic_gradation compute_anisotropic_gradation \
  test_anisotropic_zz_3d test_anisotropic_zz


# the test programs to be built:
TEST_BINARIES=$(filter-out $(DISABLED_TESTS), $(basename $(wildcard *.F90)))

unittest: $(TEST_BINARIES)
	ln -sf $(addprefix ../../error_measures/tests/,$(TEST_BINARIES)) ../../bin/tests/

.SUFFIXES: .f90 .F90 .c .cpp .o .a $(.SUFFIXES)

%.o:	%.f90
	$(FC) $(FCFLAGS) -c $<
%.o:	%.F90
	$(FC) $(FCFLAGS) -c $<
%.o:	%.c
	$(CC) $(CFLAGS) -c $<
%.o:	%.cpp
	$(CXX) $(CXXFLAGS) -c $<

# creates a TESTNAME_main.o from test_main.cpp which calls the subroutine
# TESTNAME, that should be a subroutine in TESTNAME.F90
%_main.o:
	$(CXX) $(CXXFLAGS) -D TESTNAME=$(subst _main.o,,$@)_ -o $@ -c test_main.cpp @PROFILING_FLAG@

# link this TESTNAME_main.o with TESTNAME.o from TESTNAME.F90
%: %_main.o %.o lib/
	$(CXX) $(LDFLAGS) -o $@ $(filter %.o,$^) $(LIBFLUIDITY) $(LIBS) @PROFILING_FLAG@

# make a temp sym-link to the directory containing fluidity and adaptivity
lib/:
	ln -s ../../lib

clean:
	rm -f $(TEST_BINARIES)
	rm -f *.o *.mod
	rm -f lib

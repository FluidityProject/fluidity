<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>FLML validation (Diamond version)</name>
  <owner userid="pef"/>
  <tags>flml diamond_validation</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>true</command_line>
  </problem_definition>
  <variables>
    <variable name="ignoredOptionsFiles" language="python">
with open("ignored", "r") as fid:
    ignoredOptionsFiles = fid.readlines()
ignoredOptionsFiles = [x.strip() for x in ignoredOptionsFiles]</variable>
    <variable name="warningOnlyOptionsFiles" language="python">
with open("warnings", "r") as fid:
    warningOnlyOptionsFiles = fid.readlines()
warningOnlyOptionsFiles = [x.strip() for x in warningOnlyOptionsFiles]</variable>
    <variable name="optionErrors" language="python">
from diamond_validator import DiamondValidator
from pathlib import Path

validator = DiamondValidator()

for testDir in ["tests", "examples"]:
    validator.ValidateOptionsFiles(
        schemafile="../../schemas/test_options.rng",
        testDir=Path(f"../../{testDir}"),
        extension="xml", xmlRootNode="testproblem")
    validator.ValidateOptionsFiles(
        schemafile="../../schemas/fluidity_options.rng",
        testDir=Path(f"../../{testDir}"),
        extension="flml", xmlRootNode="fluidity_options")

optionErrors = validator.optionErrors</variable>
  </variables>
  <pass_tests>
    <test name="All flml and xml were validated" language="python">
assert len(set(optionErrors).difference(
    ignoredOptionsFiles + warningOnlyOptionsFiles)) == 0</test>
  </pass_tests>
  <warn_tests>
    <test name="All flml and xml were validated" language="python">
assert len(set(optionErrors)
           .intersection(warningOnlyOptionsFiles)
           .difference(ignoredOptionsFiles)) == 0</test>
  </warn_tests>
</testproblem>

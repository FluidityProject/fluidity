<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">cv_mass_matrix_check_p2_1d</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">1</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="line">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="DGP0">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">0</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="CGP2">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="DGP2">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">0</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <output_mesh name="DGP2"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">1.0</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">1.0</real_value>
    </finish_time>
  </timestepping>
  <material_phase name="fluid">
    <vector_field name="Velocity" rank="1">
      <prescribed>
        <mesh name="CoordinateMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value shape="1" dim1="dim" rank="1">0.0</real_value>
          </constant>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </vector_field>
    <scalar_field name="CVMassMatrix" rank="0">
      <diagnostic>
        <algorithm name="control_volume_mass_matrix" material_phase_support="single"/>
        <mesh name="CGP2"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="FELumpedMassMatrix" rank="0">
      <diagnostic>
        <algorithm name="finite_element_lumped_mass_matrix" material_phase_support="single"/>
        <mesh name="CGP2"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="ElementVolume" rank="0">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="multiple">
          <string_value lines="20" type="code" language="python">coord = states["fluid"].vector_fields["Coordinate"]

for ele in range(field.element_count):
   
   # form element transform object
   tr_ele = Transform(ele, coord)
   
   # set volume via sum of detwei
   field.set(ele, sum(tr_ele.detwei))</string_value>
        </algorithm>
        <mesh name="DGP0"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="SumCVMassMatrix" rank="0">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="multiple">
          <string_value lines="20" type="code" language="python">cvmass = states["fluid"].scalar_fields["CVMassMatrix"]

sum_cvmass = sum(cvmass.val)

for ele in range(field.element_count):
   
   field.set(ele, sum_cvmass)</string_value>
        </algorithm>
        <mesh name="DGP0"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="SumFELumpedMassMatrix" rank="0">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="multiple">
          <string_value lines="20" type="code" language="python">felmass = states["fluid"].scalar_fields["FELumpedMassMatrix"]

sum_felmass = sum(felmass.val)

for ele in range(field.element_count):
   
   field.set(ele, sum_felmass)</string_value>
        </algorithm>
        <mesh name="DGP0"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
</fluidity_options>

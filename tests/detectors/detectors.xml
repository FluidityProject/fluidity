<?xml version="1.0" encoding="UTF-8" ?>

<testproblem>
  <name>detectors</name>
  <owner userid="dham"/>
  <tags>flml</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>fluidity  detectors.flml </command_line>
    <!-- Test that detectors work the new way. -->
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
    </variable>
    <variable name="detector" language="python">
import h5py
detector = h5py.File('detectors.detectors.h5part', 'r')
    </variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">
      assert(solvers_converged)
    </test>
    <test name="tracer at D1" language="python">
assert abs(detector['/Step#0/Water%Tracer'][0] - 0.0) &lt; 1e-12
    </test>
    <test name="tracer at D2" language="python">
assert abs(detector['/Step#0/Water%Tracer'][1] - 0.25) &lt; 1e-12
    </test>
    <test name="tracer at D3" language="python">
assert abs(detector['/Step#0/Water%Tracer'][2] - 0.4) &lt; 1e-12
    </test>
    <test name="velocity at D1" language="python">
import numpy as np
vel = np.array([detector['/Step#0/Water%Velocity%{}'.format(dim)][0] for dim in ('x', 'y')])
assert max(abs(vel-[0.0, 0.0])) &lt; 1e-12
    </test>
    <test name="velocity at D2" language="python">
import numpy as np
vel = np.array([detector['/Step#0/Water%Velocity%{}'.format(dim)][1] for dim in ('x', 'y')])
assert max(abs(vel-[0.25, 0.0])) &lt; 1e-12
    </test>
    <test name="velocity at D3" language="python">
import numpy as np
vel = np.array([detector['/Step#0/Water%Velocity%{}'.format(dim)][2] for dim in ('x', 'y')])
assert max(abs(vel-[0.4, 0.0])) &lt; 1e-12
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

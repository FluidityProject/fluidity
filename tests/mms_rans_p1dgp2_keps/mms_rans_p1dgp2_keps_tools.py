from math import sin, cos, tanh, pi

def u(X):
    return cos(X[0]) + 0.600*sin(X[1]) + 3.00

def v(X):
    return X[1]*sin(X[0])

def p(X):
    return cos(X[1]) + sin(X[0]) + sin(X[0]*X[1]/pi) - 1.00

def rho(X):
    return -1.30*cos(2.10*X[1]) - 1.80*sin(1.70*X[0]) + 3.70*sin(1.30*X[0]*X[1]/pi) + 5.20

def ke(X):
    return 0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900

def eps(X):
    return 4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20

def forcing_u(X):
    return 0.600*X[1]*cos(X[1])*sin(X[0]) + (X[1]*cos(X[0]) + 0.600*cos(X[1]))*(1.02*X[0]*cos(0.600*X[0]*X[1]/pi)/pi - 3.44*sin(0.800*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(X[1]*cos(X[0]) + 0.600*cos(X[1]))*(-0.320*X[0]*sin(0.800*X[0]*X[1]/pi)/pi + 0.420*cos(0.700*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) - (0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2*(cos(X[0]) - 0.600*sin(X[1]))/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + 2*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2*cos(X[0])/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) - (cos(X[0]) + 0.600*sin(X[1]) + 3.00)*sin(X[0]) - 2*(1.02*X[1]*cos(0.600*X[0]*X[1]/pi)/pi - 2.66*cos(0.700*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2*sin(X[0])/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 + 4*(-0.320*X[1]*sin(0.800*X[0]*X[1]/pi)/pi - 0.540*sin(0.600*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)*sin(X[0])/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + X[1]*cos(X[0]*X[1]/pi)/pi + 2.00*cos(X[0]) + 0.919238815300000*cos(2.10*X[1]) + 1.27279220580000*sin(1.70*X[0]) - 2.61629508970000*sin(1.30*X[0]*X[1]/pi) + 0.600*sin(X[1]) - 3.67695526120000

def forcing_v(X):
    return X[1]*(cos(X[0]) + 0.600*sin(X[1]) + 3.00)*cos(X[0]) + X[1]*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2*sin(X[0])/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + X[1]*sin(X[0])**2 + (X[1]*cos(X[0]) + 0.600*cos(X[1]))*(1.02*X[1]*cos(0.600*X[0]*X[1]/pi)/pi - 2.66*cos(0.700*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(X[1]*cos(X[0]) + 0.600*cos(X[1]))*(-0.320*X[1]*sin(0.800*X[0]*X[1]/pi)/pi - 0.540*sin(0.600*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + X[1]*sin(X[0]) + 2*(1.02*X[0]*cos(0.600*X[0]*X[1]/pi)/pi - 3.44*sin(0.800*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2*sin(X[0])/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 4*(-0.320*X[0]*sin(0.800*X[0]*X[1]/pi)/pi + 0.420*cos(0.700*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)*sin(X[0])/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + X[0]*cos(X[0]*X[1]/pi)/pi + 0.919238815300000*cos(2.10*X[1]) + 1.27279220580000*sin(1.70*X[0]) - 2.61629508970000*sin(1.30*X[0]*X[1]/pi) - sin(X[1]) - 3.67695526120000

def forcing_rho(X):
    return X[1]*(4.81*X[0]*cos(1.30*X[0]*X[1]/pi)/pi + 2.73*sin(2.10*X[1]))*sin(X[0]) + ((1.02*X[0]*cos(0.600*X[0]*X[1]/pi)/pi - 3.44*sin(0.800*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(-0.320*X[0]*sin(0.800*X[0]*X[1]/pi)/pi + 0.420*cos(0.700*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20))*(4.81*X[0]*cos(1.30*X[0]*X[1]/pi)/pi + 2.73*sin(2.10*X[1])) + ((1.02*X[1]*cos(0.600*X[0]*X[1]/pi)/pi - 2.66*cos(0.700*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(-0.320*X[1]*sin(0.800*X[0]*X[1]/pi)/pi - 0.540*sin(0.600*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20))*(4.81*X[1]*cos(1.30*X[0]*X[1]/pi)/pi - 3.06*cos(1.70*X[0])) - ((0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + 1.00)*(-6.25300000000000*X[0]**2*sin(1.30*X[0]*X[1]/pi)/pi**2 - 6.25300000000000*X[1]**2*sin(1.30*X[0]*X[1]/pi)/pi**2 + 5.73300000000000*cos(2.10*X[1]) + 5.20200000000000*sin(1.70*X[0])) + (4.81*X[1]*cos(1.30*X[0]*X[1]/pi)/pi - 3.06*cos(1.70*X[0]))*(cos(X[0]) + 0.600*sin(X[1]) + 3.00)

def forcing_ke(X):
    return X[1]*(-0.320*X[0]*sin(0.800*X[0]*X[1]/pi)/pi + 0.420*cos(0.700*X[1]))*sin(X[0]) - ((0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + 1.00)*(-0.256*X[0]**2*cos(0.800*X[0]*X[1]/pi)/pi**2 - 0.256*X[1]**2*cos(0.800*X[0]*X[1]/pi)/pi**2 - 0.324*cos(0.600*X[0]) - 0.294*sin(0.700*X[1])) + ((1.02*X[0]*cos(0.600*X[0]*X[1]/pi)/pi - 3.44*sin(0.800*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(-0.320*X[0]*sin(0.800*X[0]*X[1]/pi)/pi + 0.420*cos(0.700*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20))*(-0.320*X[0]*sin(0.800*X[0]*X[1]/pi)/pi + 0.420*cos(0.700*X[1])) + ((1.02*X[1]*cos(0.600*X[0]*X[1]/pi)/pi - 2.66*cos(0.700*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(-0.320*X[1]*sin(0.800*X[0]*X[1]/pi)/pi - 0.540*sin(0.600*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20))*(-0.320*X[1]*sin(0.800*X[0]*X[1]/pi)/pi - 0.540*sin(0.600*X[0])) + (-0.320*X[1]*sin(0.800*X[0]*X[1]/pi)/pi - 0.540*sin(0.600*X[0]))*(cos(X[0]) + 0.600*sin(X[1]) + 3.00) - (X[1]**2*cos(X[0])**2 + 1.20*X[1]*cos(X[0])*cos(X[1]) + 0.360*cos(X[1])**2 + 4*sin(X[0])**2)*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + (3.40118361661000*X[0]*cos(1.30*X[0]*X[1]/pi)/pi + 3.40118361661000*X[1]*cos(1.30*X[0]*X[1]/pi)/pi - 2.16374674986000*cos(1.70*X[0]) + 1.93040151213000*sin(2.10*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + 4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20

def forcing_eps(X):
    return X[1]*(1.02*X[0]*cos(0.600*X[0]*X[1]/pi)/pi - 3.44*sin(0.800*X[1]))*sin(X[0]) + (3.40118361661000*X[0]*cos(1.30*X[0]*X[1]/pi)/pi + 3.40118361661000*X[1]*cos(1.30*X[0]*X[1]/pi)/pi - 2.16374674986000*cos(1.70*X[0]) + 1.93040151213000*sin(2.10*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)*tanh((0.707106781000000*X[1]*sin(X[0]) + 0.707106781000000*cos(X[0]) + 0.424264068600000*sin(X[1]) + 2.12132034300000)/((X[1]*sin(X[0]))**2.00 - (0.707106781000000*X[1]*sin(X[0]) + 0.707106781000000*cos(X[0]) + 0.424264068600000*sin(X[1]) + 2.12132034300000)**2.00 + (cos(X[0]) + 0.600*sin(X[1]) + 3.00)**2.00)**0.500) + ((1.02*X[0]*cos(0.600*X[0]*X[1]/pi)/pi - 3.44*sin(0.800*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(-0.320*X[0]*sin(0.800*X[0]*X[1]/pi)/pi + 0.420*cos(0.700*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20))*(1.02*X[0]*cos(0.600*X[0]*X[1]/pi)/pi - 3.44*sin(0.800*X[1])) + ((1.02*X[1]*cos(0.600*X[0]*X[1]/pi)/pi - 2.66*cos(0.700*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2 - 2*(-0.320*X[1]*sin(0.800*X[0]*X[1]/pi)/pi - 0.540*sin(0.600*X[0]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20))*(1.02*X[1]*cos(0.600*X[0]*X[1]/pi)/pi - 2.66*cos(0.700*X[0])) - ((0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20) + 1.00)*(-0.612*X[0]**2*sin(0.600*X[0]*X[1]/pi)/pi**2 - 0.612*X[1]**2*sin(0.600*X[0]*X[1]/pi)/pi**2 - 2.75200000000000*cos(0.800*X[1]) + 1.86200000000000*sin(0.700*X[0])) - (X[1]**2*cos(X[0])**2 + 1.20*X[1]*cos(X[0])*cos(X[1]) + 0.360*cos(X[1])**2 + 4*sin(X[0])**2)*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900) + (1.02*X[1]*cos(0.600*X[0]*X[1]/pi)/pi - 2.66*cos(0.700*X[0]))*(cos(X[0]) + 0.600*sin(X[1]) + 3.00) + (4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2/(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)

def P_ke(X):
    return (X[1]**2*cos(X[0])**2 + 1.20*X[1]*cos(X[0])*cos(X[1]) + 0.360*cos(X[1])**2 + 4*sin(X[0])**2)*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)

def P_eps(X):
    return (X[1]**2*cos(X[0])**2 + 1.20*X[1]*cos(X[0])*cos(X[1]) + 0.360*cos(X[1])**2 + 4*sin(X[0])**2)*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)

def A_ke(X):
    return -4.30*cos(0.800*X[1]) + 3.80*sin(0.700*X[0]) - 1.70*sin(0.600*X[0]*X[1]/pi) - 8.20

def A_eps(X):
    return -(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)**2.00/(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)

def B_ke(X):
    return -(3.40118361661000*X[0]*cos(1.30*X[0]*X[1]/pi)/pi + 3.40118361661000*X[1]*cos(1.30*X[0]*X[1]/pi)/pi - 2.16374674986000*cos(1.70*X[0]) + 1.93040151213000*sin(2.10*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)

def B_eps(X):
    return -(3.40118361661000*X[0]*cos(1.30*X[0]*X[1]/pi)/pi + 3.40118361661000*X[1]*cos(1.30*X[0]*X[1]/pi)/pi - 2.16374674986000*cos(1.70*X[0]) + 1.93040151213000*sin(2.10*X[1]))*(0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)*tanh((0.707106781000000*X[1]*sin(X[0]) + 0.707106781000000*cos(X[0]) + 0.424264068600000*sin(X[1]) + 2.12132034300000)/((X[1]*sin(X[0]))**2.00 - (0.707106781000000*X[1]*sin(X[0]) + 0.707106781000000*cos(X[0]) + 0.424264068600000*sin(X[1]) + 2.12132034300000)**2.00 + (cos(X[0]) + 0.600*sin(X[1]) + 3.00)**2.00)**0.500)

def EV(X):
    return (0.900*cos(0.600*X[0]) + 0.400*cos(0.800*X[0]*X[1]/pi) + 0.600*sin(0.700*X[1]) + 0.900)**2/(4.30*cos(0.800*X[1]) - 3.80*sin(0.700*X[0]) + 1.70*sin(0.600*X[0]*X[1]/pi) + 8.20)

def velocity(X):
   return [u(X), v(X)]

def forcing_velocity(X):
   return [forcing_u(X), forcing_v(X)]

def C3(X):
    return tanh((0.707106781000000*X[1]*sin(X[0]) + 0.707106781000000*cos(X[0]) + 0.424264068600000*sin(X[1]) + 2.12132034300000)/((X[1]*sin(X[0]))**2.00 - (0.707106781000000*X[1]*sin(X[0]) + 0.707106781000000*cos(X[0]) + 0.424264068600000*sin(X[1]) + 2.12132034300000)**2.00 + (cos(X[0]) + 0.600*sin(X[1]) + 3.00)**2.00)**0.500)

def u_xy(X):
    return ((X[1]*sin(X[0]))**2.00 - (0.707106781000000*X[1]*sin(X[0]) + 0.707106781000000*cos(X[0]) + 0.424264068600000*sin(X[1]) + 2.12132034300000)**2.00 + (cos(X[0]) + 0.600*sin(X[1]) + 3.00)**2.00)**0.500

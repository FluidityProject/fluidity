<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">sloshing_tank_p1dgp2</string_value>
    <comment>Sloshing mesh with analytical solution
Shows how numerical scheme predicts frequencey and damping rate</comment>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_mesh>
        <mesh name="ExternalMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="ExternalMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="ExternalMesh">
      <from_file file_name="src/mesh2">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">5</integer_value>
      </degree>
      <surface_degree>
        <integer_value rank="0">5</integer_value>
      </surface_degree>
    </quadrature>
    <ocean_boundaries>
      <top_surface_ids>
        <integer_value rank="1" shape="1">29</integer_value>
      </top_surface_ids>
      <bottom_surface_ids>
        <integer_value rank="1" shape="1">30</integer_value>
      </bottom_surface_ids>
      <scalar_field rank="0" name="DistanceToTop">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
      <scalar_field rank="0" name="DistanceToBottom">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
    </ocean_boundaries>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">0.0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="VelocityMesh"/>
    <stat/>
    <detectors>
      <static_detector name="left">
        <location>
          <real_value rank="1" dim1="dim" shape="3">0.0 0.0 0.0</real_value>
        </location>
      </static_detector>
      <static_detector name="middle">
        <location>
          <real_value rank="1" dim1="dim" shape="3">0.5 0.0 0.0</real_value>
        </location>
      </static_detector>
    </detectors>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.2</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">10</real_value>
    </finish_time>
    <nonlinear_iterations>
      <integer_value rank="0">20</integer_value>
      <tolerance>
        <real_value rank="0">1.0E-5</real_value>
        <infinity_norm/>
      </tolerance>
      <terminate_if_not_converged/>
    </nonlinear_iterations>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">1.0</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value rank="1" dim1="dim" shape="3">0 0 -1</real_value>
            </constant>
          </value>
          <output/>
          <stat>
            <include_in_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="water">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">1.0</real_value>
          </reference_density>
          <subtract_out_hydrostatic_level/>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field rank="0" name="Pressure">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <remove_stabilisation_term/>
            <integrate_continuity_by_parts/>
          </continuous_galerkin>
        </spatial_discretisation>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">never</string_value>
          </poisson_pressure_solution>
          <use_projection_method/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">from scipy.special import erf
def val(X, t):
    import settings
    import ana_sol
    a_0 = settings.a0 # initial maximum perturbation
    g = settings.g # gravity
    eta= settings.eta # viscosity
    L= settings.L # wavelength
    timestep= settings.timestep # timestep    
    # Check if analytical_solution computes the correct initial condition
    init_ana=ana_sol.analytic_solution(t, X[0], a_0, L, g, eta)
    return init_ana</string_value>
            <comment>def val(X, t):
   from math import cos
   import settings
   g=settings.g
   a0=settings.a0
   return  (g*a0*cos(3.1415926536*(X[0]**2+X[1]**2)**0.5))</comment>
          </python>
        </initial_condition>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="Density">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Boussinesq"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <viscosity_scheme>
              <compact_discontinuous_galerkin/>
              <tensor_form/>
            </viscosity_scheme>
            <advection_scheme>
              <upwind/>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <buoyancy/>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.5</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">1.0</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">100</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="3">0.0 0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="SidesNoNormalFlow">
          <surface_ids>
            <integer_value rank="1" shape="2">31 32</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <boundary_conditions name="fs">
          <surface_ids>
            <integer_value rank="1" shape="1">29</integer_value>
          </surface_ids>
          <type name="free_surface"/>
        </boundary_conditions>
        <boundary_conditions name="BottomNoNormalFlow">
          <surface_ids>
            <integer_value rank="1" shape="1">30</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <tensor_field name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <python>
                  <string_value type="code" language="python" lines="20">def val(X, t):
    import settings
    return settings.eta</string_value>
                </python>
              </isotropic>
            </value>
            <output/>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="FreeSurface">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="FreeSurface_Analytical">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">from scipy.special import erf
def val(X, t):
    import settings
    import ana_sol
    a_0 = settings.a0 # initial maximum perturbation
    g = settings.g # gravity
    eta= settings.eta # viscosity
    L= settings.L # wavelength
    timestep= settings.timestep # timestep    
    return ana_sol.analytic_solution(t, X[0], a_0, L, g, eta)</string_value>
            <comment>def val(X, t):
    #import settings
    #import ana_sol
    #from scipy.special import erf
    import scipy
    #from scipy.interpolate import interp1d
    #a_0 = settings.a0 # initial maximum perturbation
    #g = settings.g # gravity
    #eta= settings.eta # viscosity
    #L= settings.L # wavelength
    #timestep= settings.timestep # timestep    
    return 0.0 #ana_sol.analytic_solution(t, X[0], a_0, L, g, eta)# Return value</comment>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="FreeSurface_Error">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="FreeSurface" source_field_1_type="scalar" source_field_2_name="FreeSurface_Analytical" source_field_2_type="scalar"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
  <mesh_adaptivity>
    <mesh_movement>
      <free_surface>
        <move_whole_mesh/>
      </free_surface>
      <vector_field name="GridVelocity" rank="1">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat>
            <include_in_stat/>
          </stat>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </vector_field>
    </mesh_movement>
  </mesh_adaptivity>
</fluidity_options>

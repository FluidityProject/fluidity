from math import sin, cos, tanh, pi, sqrt

def u1(X):
    return sin(X[0]**2 + X[1]**2) + 0.500

def v1(X):
    return 0.100*cos(X[0]**2 + X[1]**2) + 0.0500

def p(X):
    return (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(0.500*X[0]*X[1] + 0.400*cos(X[0] + X[1]) + 8.00)

def rho1(X):
    return 0.500*sin(X[0]**2 + X[1]**2) + 0.750

def ie1(X):
    return 1.25*X[0]*X[1] + cos(X[0] + X[1]) + 20.0

def vfrac1(X):
    return -0.500*cos(3*X[0]**2*X[1]) + 1.10

def forcing_u1(X):
    return 2*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[1]*cos(X[0]**2 + X[1]**2) + 2*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(sin(X[0]**2 + X[1]**2) + 0.500)*X[0]*cos(X[0]**2 + X[1]**2) - 3.00*(1.86666666666667*X[0]*cos(X[0]**2 + X[1]**2) + 0.0933333333333333*X[1]*sin(X[0]**2 + X[1]**2))*X[0]*X[1]*sin(3*X[0]**2*X[1]) - 1.50*(-0.140*X[0]*sin(X[0]**2 + X[1]**2) + 1.40*X[1]*cos(X[0]**2 + X[1]**2))*X[0]**2*sin(3*X[0]**2*X[1]) + (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*((0.500*X[0]*X[1] + 0.400*cos(X[0] + X[1]) + 8.00)*X[0]*cos(X[0]**2 + X[1]**2) + (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(0.500*X[1] - 0.400*sin(X[0] + X[1]))) - (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(-0.280*X[0]*X[1]*cos(X[0]**2 + X[1]**2) - 2.80*X[1]**2*sin(X[0]**2 + X[1]**2) + 1.40*cos(X[0]**2 + X[1]**2)) - (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(-3.73333333333333*X[0]**2*sin(X[0]**2 + X[1]**2) + 0.186666666666667*X[0]*X[1]*cos(X[0]**2 + X[1]**2) + 1.86666666666667*cos(X[0]**2 + X[1]**2)) - (-0.353553390500000*cos(3*X[0]**2*X[1]) + 0.777817459100000)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)

def forcing_v1(X):
    return -0.200*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[1]*sin(X[0]**2 + X[1]**2) - 0.200*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(sin(X[0]**2 + X[1]**2) + 0.500)*X[0]*sin(X[0]**2 + X[1]**2) - 1.50*(-0.933333333333333*X[0]*cos(X[0]**2 + X[1]**2) - 0.186666666666667*X[1]*sin(X[0]**2 + X[1]**2))*X[0]**2*sin(3*X[0]**2*X[1]) - 3.00*(-0.140*X[0]*sin(X[0]**2 + X[1]**2) + 1.40*X[1]*cos(X[0]**2 + X[1]**2))*X[0]*X[1]*sin(3*X[0]**2*X[1]) + (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*((0.500*X[0]*X[1] + 0.400*cos(X[0] + X[1]) + 8.00)*X[1]*cos(X[0]**2 + X[1]**2) + (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(0.500*X[0] - 0.400*sin(X[0] + X[1]))) - (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(1.86666666666667*X[0]*X[1]*sin(X[0]**2 + X[1]**2) - 0.373333333333333*X[1]**2*cos(X[0]**2 + X[1]**2) - 0.186666666666667*sin(X[0]**2 + X[1]**2)) - (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(-0.280*X[0]**2*cos(X[0]**2 + X[1]**2) - 2.80*X[0]*X[1]*sin(X[0]**2 + X[1]**2) - 0.140*sin(X[0]**2 + X[1]**2)) - (-0.353553390500000*cos(3*X[0]**2*X[1]) + 0.777817459100000)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)

def forcing_rho1(X):
    return 1.50*(0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[0]**2*sin(3*X[0]**2*X[1]) + 3.00*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(sin(X[0]**2 + X[1]**2) + 0.500)*X[0]*X[1]*sin(3*X[0]**2*X[1]) + (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*X[1]*cos(X[0]**2 + X[1]**2) + 2*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[0]*cos(X[0]**2 + X[1]**2) - 0.200*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[1]*sin(X[0]**2 + X[1]**2) + (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(sin(X[0]**2 + X[1]**2) + 0.500)*X[0]*cos(X[0]**2 + X[1]**2) + (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(-3.00*(2.50*X[0] + cos(X[0]**2 + X[1]**2))*X[0]*X[1]*sin(3*X[0]**2*X[1]) - (0.500*cos(3*X[0]**2*X[1]) - 0.100)*(2.00*X[0]*sin(X[0]**2 + X[1]**2) - 2.50)) + (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(-0.750*X[0]**3*X[1]*sin(3*X[0]**2*X[1]) + 0.500*(0.500*cos(3*X[0]**2*X[1]) - 0.100)*X[0])

def forcing_ie1(X):
    return 2*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(0.500*X[0]*X[1] + 0.400*cos(X[0] + X[1]) + 8.00)*X[0]*cos(X[0]**2 + X[1]**2) - 0.200*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(0.500*X[0]*X[1] + 0.400*cos(X[0] + X[1]) + 8.00)*X[1]*sin(X[0]**2 + X[1]**2) + (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(1.25*X[0] - sin(X[0] + X[1])) + (-0.500*cos(3*X[0]**2*X[1]) + 1.10)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(sin(X[0]**2 + X[1]**2) + 0.500)*(1.25*X[1] - sin(X[0] + X[1])) - 1.00e6*(0.0750*cos(3*X[0]**2*X[1]) - 0.0150)*((22.6746086962399*((0.000500*sin(X[0]**2 + X[1]**2) + 0.000750)*sqrt((-0.500*X[0]*X[1] + 0.100*cos(X[0]**2 + X[1]**2) + 0.0500)**2 + (-2.50*X[0] + sin(X[0]**2 + X[1]**2) - cos(X[0]**2 + X[1]**2) + 0.500)**2))**0.200 + 1.00)*(5.00*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)**2 + 5.00*cos(3*X[0]**2*X[1]) - 4.00) + 38.7162014560120*(1.20*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)**2 + 1.20*cos(3*X[0]**2*X[1]) - 1.31)*((0.000500*sin(X[0]**2 + X[1]**2) + 0.000750)*sqrt((-0.500*X[0]*X[1] + 0.100*cos(X[0]**2 + X[1]**2) + 0.0500)**2 + (-2.50*X[0] + sin(X[0]**2 + X[1]**2) - cos(X[0]**2 + X[1]**2) + 0.500)**2))**0.700)*(-0.00178571428571429*X[0]*X[1] + 0.00100*sin(X[0]*X[1]) - 0.00142857142857143*cos(X[0] + X[1]) - 0.0185714285714286)

def velocity1(X):
   return [u1(X), v1(X)]

def forcing_velocity1(X):
   return [forcing_u1(X), forcing_v1(X)]

def u2(X):
    return 2.50*X[0] + cos(X[0]**2 + X[1]**2)

def v2(X):
    return 0.500*X[0]*X[1]

def rho2(X):
    return 3.00

def ie2(X):
    return sin(X[0]*X[1]) + 10.0

def vfrac2(X):
    return 0.500*cos(3*X[0]**2*X[1]) - 0.100

def forcing_u2(X):
    return -(1.50*cos(3*X[0]**2*X[1]) - 0.300)*X[0]*X[1]**2*sin(X[0]**2 + X[1]**2) + 1.50*(-1.40*X[1]*sin(X[0]**2 + X[1]**2) + 0.350*X[1])*X[0]**2*sin(3*X[0]**2*X[1]) + 3.00*(-1.86666666666667*X[0]*sin(X[0]**2 + X[1]**2) - 0.233333333333333*X[0] + 2.33333333333333)*X[0]*X[1]*sin(3*X[0]**2*X[1]) - (1.50*cos(3*X[0]**2*X[1]) - 0.300)*(2.00*X[0]*sin(X[0]**2 + X[1]**2) - 2.50)*(2.50*X[0] + cos(X[0]**2 + X[1]**2)) - (0.500*cos(3*X[0]**2*X[1]) - 0.100)*(-2.80*X[1]**2*cos(X[0]**2 + X[1]**2) - 1.40*sin(X[0]**2 + X[1]**2) + 0.350) - (0.500*cos(3*X[0]**2*X[1]) - 0.100)*(-3.73333333333333*X[0]**2*cos(X[0]**2 + X[1]**2) - 1.86666666666667*sin(X[0]**2 + X[1]**2) - 0.233333333333333) + (0.500*cos(3*X[0]**2*X[1]) - 0.100)*((0.500*X[0]*X[1] + 0.400*cos(X[0] + X[1]) + 8.00)*X[0]*cos(X[0]**2 + X[1]**2) + (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(0.500*X[1] - 0.400*sin(X[0] + X[1]))) - 1.06066017150000*cos(3*X[0]**2*X[1]) + 0.212132034300000

def forcing_v2(X):
    return 0.933333333333333*(0.500*cos(3*X[0]**2*X[1]) - 0.100)*X[0]*X[1]*cos(X[0]**2 + X[1]**2) + 0.250*(1.50*cos(3*X[0]**2*X[1]) - 0.300)*X[0]**2*X[1] + 3.00*(-1.40*X[1]*sin(X[0]**2 + X[1]**2) + 0.350*X[1])*X[0]*X[1]*sin(3*X[0]**2*X[1]) + 1.50*(0.933333333333333*X[0]*sin(X[0]**2 + X[1]**2) + 0.466666666666667*X[0] - 1.16666666666667)*X[0]**2*sin(3*X[0]**2*X[1]) + 0.500*(1.50*cos(3*X[0]**2*X[1]) - 0.300)*(2.50*X[0] + cos(X[0]**2 + X[1]**2))*X[1] + (0.500*cos(3*X[0]**2*X[1]) - 0.100)*((0.500*X[0]*X[1] + 0.400*cos(X[0] + X[1]) + 8.00)*X[1]*cos(X[0]**2 + X[1]**2) + (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(0.500*X[0] - 0.400*sin(X[0] + X[1]))) - 1.06066017150000*cos(3*X[0]**2*X[1]) + 0.212132034300000

def forcing_ie2(X):
    return 0.500*(1.50*cos(3*X[0]**2*X[1]) - 0.300)*X[0]**2*X[1]*cos(X[0]*X[1]) + (1.50*cos(3*X[0]**2*X[1]) - 0.300)*(2.50*X[0] + cos(X[0]**2 + X[1]**2))*X[1]*cos(X[0]*X[1]) + 1.00e6*(0.0750*cos(3*X[0]**2*X[1]) - 0.0150)*((22.6746086962399*((0.000500*sin(X[0]**2 + X[1]**2) + 0.000750)*sqrt((-0.500*X[0]*X[1] + 0.100*cos(X[0]**2 + X[1]**2) + 0.0500)**2 + (-2.50*X[0] + sin(X[0]**2 + X[1]**2) - cos(X[0]**2 + X[1]**2) + 0.500)**2))**0.200 + 1.00)*(5.00*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)**2 + 5.00*cos(3*X[0]**2*X[1]) - 4.00) + 38.7162014560120*(1.20*(-0.500*cos(3*X[0]**2*X[1]) + 1.10)**2 + 1.20*cos(3*X[0]**2*X[1]) - 1.31)*((0.000500*sin(X[0]**2 + X[1]**2) + 0.000750)*sqrt((-0.500*X[0]*X[1] + 0.100*cos(X[0]**2 + X[1]**2) + 0.0500)**2 + (-2.50*X[0] + sin(X[0]**2 + X[1]**2) - cos(X[0]**2 + X[1]**2) + 0.500)**2))**0.700)*(-0.00178571428571429*X[0]*X[1] + 0.00100*sin(X[0]*X[1]) - 0.00142857142857143*cos(X[0] + X[1]) - 0.0185714285714286)

def velocity2(X):
   return [u2(X), v2(X)]

def forcing_velocity2(X):
   return [forcing_u2(X), forcing_v2(X)]


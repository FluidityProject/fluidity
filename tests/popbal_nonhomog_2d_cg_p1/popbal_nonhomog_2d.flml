<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">popbal_nonhomog_2d</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="./src/channel">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">3</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">1</real_value>
      </constant>
    </dump_period>
    <output_mesh name="VelocityMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.005</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">20</real_value>
    </finish_time>
  </timestepping>
  <material_phase name="fluid">
    <vector_field rank="1" name="Velocity">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0 0</real_value>
          </constant>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </vector_field>
    <scalar_field rank="0" name="m3_analytical">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
  from math import exp, pi, cos
  if (abs(t-round(t))&lt;=0.01):
     nu=0.001
     L=1.0
     phi1=0.14
     phi2=0.036
     n=100
     phi_n=0.0
     i=1
     while i&lt;=n:
         j=2*i-1
         val = (-1)**((j-1)/2.0) * (1.0/j)*exp(-(nu*j**2*pi**2*t)/(L**2))*cos((j*pi*X[0])/L)
         phi_n = phi_n + val
         i=i+1
     phi_n = phi_n*(phi1-phi2)*(2/pi) + (phi1+phi2)/2.0
     return phi_n
  else:
     return 0.0</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="ScalarAbsoluteDifference">
      <diagnostic field_name_a="Moment_3" field_name_b="m3_analytical">
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <exclude_from_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <population_balance name="DQMOM">
      <use_prognostic_field_initial_conditions/>
      <abscissa>
        <scalar_field rank="0" name="Abscissa_0">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
            <consistent_interpolation/>
          </diagnostic>
        </scalar_field>
        <scalar_field rank="0" name="Abscissa_1">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
            <consistent_interpolation/>
          </diagnostic>
        </scalar_field>
      </abscissa>
      <weights>
        <scalar_field rank="0" name="Weight_0">
          <prognostic>
            <mesh name="VelocityMesh"/>
            <equation name="AdvectionDiffusion"/>
            <spatial_discretisation>
              <continuous_galerkin>
                <stabilisation>
                  <no_stabilisation/>
                </stabilisation>
                <advection_terms/>
                <mass_terms/>
              </continuous_galerkin>
              <conservative_advection>
                <real_value rank="0">0.0</real_value>
              </conservative_advection>
            </spatial_discretisation>
            <temporal_discretisation>
              <theta>
                <real_value rank="0">0.5</real_value>
              </theta>
            </temporal_discretisation>
            <solver>
              <iterative_method name="gmres">
                <restart>
                  <integer_value rank="0">30</integer_value>
                </restart>
              </iterative_method>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1e-7</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
            <initial_condition name="WholeMesh">
              <constant>
                <real_value rank="0">0.5</real_value>
              </constant>
            </initial_condition>
            <tensor_field name="Diffusivity" rank="2">
              <prescribed>
                <value name="WholeMesh">
                  <isotropic>
                    <constant>
                      <real_value rank="0">1e-3</real_value>
                    </constant>
                  </isotropic>
                </value>
                <output/>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </tensor_field>
            <scalar_field name="Source" rank="0">
              <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"/>
                <output/>
                <stat/>
                <detectors>
                  <include_in_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </diagnostic>
            </scalar_field>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
            <consistent_interpolation/>
          </prognostic>
        </scalar_field>
        <scalar_field rank="0" name="Weight_1">
          <prognostic>
            <mesh name="VelocityMesh"/>
            <equation name="AdvectionDiffusion"/>
            <spatial_discretisation>
              <continuous_galerkin>
                <stabilisation>
                  <no_stabilisation/>
                </stabilisation>
                <advection_terms/>
                <mass_terms/>
              </continuous_galerkin>
              <conservative_advection>
                <real_value rank="0">0.0</real_value>
              </conservative_advection>
            </spatial_discretisation>
            <temporal_discretisation>
              <theta>
                <real_value rank="0">0.5</real_value>
              </theta>
            </temporal_discretisation>
            <solver>
              <iterative_method name="gmres">
                <restart>
                  <integer_value rank="0">30</integer_value>
                </restart>
              </iterative_method>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1e-7</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
            <initial_condition name="WholeMesh">
              <constant>
                <real_value rank="0">0.5</real_value>
              </constant>
            </initial_condition>
            <tensor_field name="Diffusivity" rank="2">
              <prescribed>
                <value name="WholeMesh">
                  <isotropic>
                    <constant>
                      <real_value rank="0">1e-3</real_value>
                    </constant>
                  </isotropic>
                </value>
                <output/>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </tensor_field>
            <scalar_field name="Source" rank="0">
              <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"/>
                <output/>
                <stat/>
                <detectors>
                  <include_in_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </diagnostic>
            </scalar_field>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
            <consistent_interpolation/>
          </prognostic>
        </scalar_field>
      </weights>
      <weighted_abscissa>
        <scalar_field rank="0" name="WeightedAbscissa_0">
          <prognostic>
            <mesh name="VelocityMesh"/>
            <equation name="AdvectionDiffusion"/>
            <spatial_discretisation>
              <continuous_galerkin>
                <stabilisation>
                  <no_stabilisation/>
                </stabilisation>
                <advection_terms/>
                <mass_terms/>
              </continuous_galerkin>
              <conservative_advection>
                <real_value rank="0">0.0</real_value>
              </conservative_advection>
            </spatial_discretisation>
            <temporal_discretisation>
              <theta>
                <real_value rank="0">0.5</real_value>
              </theta>
            </temporal_discretisation>
            <solver>
              <iterative_method name="gmres">
                <restart>
                  <integer_value rank="0">30</integer_value>
                </restart>
              </iterative_method>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1e-7</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
            <initial_condition name="WholeMesh">
              <python>
                <string_value type="code" language="python" lines="20">def val(X, t):
  if X[0] &lt; 0.5:
    return 0.5*0.6
  else:
    return 0.5*0.4</string_value>
              </python>
            </initial_condition>
            <tensor_field name="Diffusivity" rank="2">
              <prescribed>
                <value name="WholeMesh">
                  <isotropic>
                    <constant>
                      <real_value rank="0">1e-3</real_value>
                    </constant>
                  </isotropic>
                </value>
                <output/>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </tensor_field>
            <scalar_field name="Source" rank="0">
              <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"/>
                <output/>
                <stat/>
                <detectors>
                  <include_in_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </diagnostic>
            </scalar_field>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
            <consistent_interpolation/>
          </prognostic>
        </scalar_field>
        <scalar_field rank="0" name="WeightedAbscissa_1">
          <prognostic>
            <mesh name="VelocityMesh"/>
            <equation name="AdvectionDiffusion"/>
            <spatial_discretisation>
              <continuous_galerkin>
                <stabilisation>
                  <no_stabilisation/>
                </stabilisation>
                <advection_terms/>
                <mass_terms/>
              </continuous_galerkin>
              <conservative_advection>
                <real_value rank="0">0.0</real_value>
              </conservative_advection>
            </spatial_discretisation>
            <temporal_discretisation>
              <theta>
                <real_value rank="0">0.5</real_value>
              </theta>
            </temporal_discretisation>
            <solver>
              <iterative_method name="gmres">
                <restart>
                  <integer_value rank="0">30</integer_value>
                </restart>
              </iterative_method>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1e-7</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
            <initial_condition name="WholeMesh">
              <python>
                <string_value type="code" language="python" lines="20">def val(X, t):
  if X[0] &lt; 0.5:
    return 0.5*0.4
  else:
    return 0.5*0.2</string_value>
              </python>
            </initial_condition>
            <tensor_field name="Diffusivity" rank="2">
              <prescribed>
                <value name="WholeMesh">
                  <isotropic>
                    <constant>
                      <real_value rank="0">1e-3</real_value>
                    </constant>
                  </isotropic>
                </value>
                <output/>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </tensor_field>
            <scalar_field name="Source" rank="0">
              <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"/>
                <output/>
                <stat/>
                <detectors>
                  <include_in_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </diagnostic>
            </scalar_field>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
            <consistent_interpolation/>
          </prognostic>
        </scalar_field>
      </weighted_abscissa>
      <adv_diff_source_term_interpolation>
        <use_mass_lumping/>
      </adv_diff_source_term_interpolation>
      <moments>
        <scalar_field rank="0" name="Moment_0">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <initial_condition name="WholeMesh">
              <python>
                <string_value type="code" language="python" lines="20">def val(X, t):
  if X[0] &lt; 0.5:
    return 0.6
  else:
    return 0.4</string_value>
              </python>
            </initial_condition>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </scalar_field>
        <scalar_field rank="0" name="Moment_1">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <initial_condition name="WholeMesh">
              <python>
                <string_value type="code" language="python" lines="20">def val(X, t):
  if X[0] &lt; 0.5:
    return 1.0
  else:
    return 1.5</string_value>
              </python>
            </initial_condition>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </scalar_field>
        <scalar_field rank="0" name="Moment_2">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <initial_condition name="WholeMesh">
              <constant>
                <real_value rank="0">4.0</real_value>
              </constant>
            </initial_condition>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </scalar_field>
        <scalar_field rank="0" name="Moment_3">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <initial_condition name="WholeMesh">
              <constant>
                <real_value rank="0">12.0</real_value>
              </constant>
            </initial_condition>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </scalar_field>
      </moments>
      <statistics>
        <scalar_field rank="0" name="Mean">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </scalar_field>
        <scalar_field rank="0" name="StandardDeviation">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </scalar_field>
        <scalar_field rank="0" name="Skew">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <mesh name="VelocityMesh"/>
            <output/>
            <stat/>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </scalar_field>
      </statistics>
      <population_balance_source_terms/>
      <ill_conditioned_matrices>
        <required_condition_number>
          <real_value rank="0">1e-12</real_value>
        </required_condition_number>
        <set_source_to_zero/>
      </ill_conditioned_matrices>
      <minimum_weight>
        <real_value rank="0">1e-10</real_value>
      </minimum_weight>
    </population_balance>
  </material_phase>
</fluidity_options>

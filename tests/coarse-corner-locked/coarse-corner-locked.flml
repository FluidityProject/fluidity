<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">coarse-corner-locked</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">oceans</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="coarse-corner">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">1</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <output_mesh name="VelocityMesh"/>
    <checkpointing>
      <checkpoint_period_in_dumps>
        <integer_value rank="0">1000000</integer_value>
      </checkpoint_period_in_dumps>
      <checkpoint_at_end/>
    </checkpointing>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">1.0</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">1e6</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">5</integer_value>
    </final_timestep>
  </timestepping>
  <physical_parameters/>
  <material_phase name="BoussinesqFluid">
    <vector_field rank="1" name="Velocity">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="3">0.0 0.0 0.0</real_value>
          </constant>
        </value>
        <output>
          <exclude_from_vtu/>
        </output>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </vector_field>
    <scalar_field rank="0" name="Temperature">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(x, t):
	if x[0] &gt; 5.0 and x[1] &gt; 5.0 and x[2] &gt; 5.0:
		return 1.0
	else:
		 return 0.0</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">1.0</real_value>
                  </constant>
                </value>
                <output/>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
      </prescribed>
    </scalar_field>
  </material_phase>
  <mesh_adaptivity>
    <hr_adaptivity>
      <period_in_timesteps>
        <integer_value rank="0">2</integer_value>
      </period_in_timesteps>
      <minimum_number_of_nodes>
        <integer_value rank="0">1</integer_value>
      </minimum_number_of_nodes>
      <maximum_number_of_nodes>
        <integer_value rank="0">1</integer_value>
      </maximum_number_of_nodes>
      <node_locking>
        <python>
          <string_value type="code" language="python" lines="20">def val(x, t):
	if x[0] &gt; 5.0:
		return 1
	else:
		return 0</string_value>
        </python>
      </node_locking>
      <enable_gradation/>
      <tensor_field name="MinimumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="3 3">1.0e-6 0.0 0.0 0.0 1.0e-6 0.0 0.0 0.0 1.0e-6</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
      <tensor_field name="MaximumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="3 3">1.0e6 0.0 0.0 0.0 1.0e6 0.0 0.0 0.0 1.0e6</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
    </hr_adaptivity>
  </mesh_adaptivity>
</fluidity_options>

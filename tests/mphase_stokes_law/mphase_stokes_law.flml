<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">mphase_stokes_law</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">multiphase</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="mphase_stokes_law">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">3</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">0.0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="VelocityMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.0001</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">5.0</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">100</integer_value>
    </final_timestep>
    <steady_state>
      <tolerance>
        <real_value rank="0">1.0e-7</real_value>
        <infinity_norm/>
      </tolerance>
      <steady_state_file>
        <binary_output/>
      </steady_state_file>
    </steady_state>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">9.8</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value rank="1" dim1="dim" shape="2">0.0 -1.0</real_value>
            </constant>
          </value>
          <output/>
          <stat>
            <include_in_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="Water">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">1000.0</real_value>
          </reference_density>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field rank="0" name="Pressure">
      <aliased material_phase_name="Tephra" field_name="Pressure"/>
    </scalar_field>
    <scalar_field rank="0" name="Density">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="LinearMomentum"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <streamline_upwind>
                <nu_bar_optimal/>
                <nu_scale name="0.5">
                  <real_value rank="0" shape="1">0.5</real_value>
                </nu_scale>
              </streamline_upwind>
            </stabilisation>
            <mass_terms>
              <lump_mass_matrix/>
            </mass_terms>
            <advection_terms/>
            <stress_terms>
              <tensor_form/>
            </stress_terms>
            <buoyancy/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-6</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="Sides">
          <surface_ids>
            <integer_value rank="1" shape="1">666</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <boundary_conditions name="Bottom">
          <surface_ids>
            <integer_value rank="1" shape="1">444</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <boundary_conditions name="Top">
          <surface_ids>
            <integer_value rank="1" shape="1">333</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <tensor_field name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">0.001</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="PhaseVolumeFraction">
      <diagnostic>
        <mesh name="VelocityMesh"/>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <cap_values>
          <upper_cap>
            <real_value rank="0">1.0</real_value>
          </upper_cap>
          <lower_cap>
            <real_value rank="0">0.0</real_value>
          </lower_cap>
        </cap_values>
      </diagnostic>
    </scalar_field>
  </material_phase>
  <material_phase name="Tephra">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">2340.0</real_value>
          </reference_density>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field rank="0" name="Pressure">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <remove_stabilisation_term/>
            <integrate_continuity_by_parts/>
          </continuous_galerkin>
        </spatial_discretisation>
        <reference_node>
          <integer_value rank="0">1</integer_value>
        </reference_node>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">only first timestep</string_value>
          </poisson_pressure_solution>
          <use_projection_method/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="mg"/>
          <relative_error>
            <real_value rank="0">1.0e-6</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
        <no_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="Density">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="LinearMomentum"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <streamline_upwind>
                <nu_bar_optimal/>
                <nu_scale name="0.5">
                  <real_value rank="0" shape="1">0.5</real_value>
                </nu_scale>
              </streamline_upwind>
            </stabilisation>
            <mass_terms>
              <lump_mass_matrix/>
            </mass_terms>
            <advection_terms/>
            <stress_terms>
              <tensor_form/>
            </stress_terms>
            <buoyancy/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-6</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="Sides">
          <surface_ids>
            <integer_value rank="1" shape="1">666</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <boundary_conditions name="Bottom">
          <surface_ids>
            <integer_value rank="1" shape="1">444</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <boundary_conditions name="Top">
          <surface_ids>
            <integer_value rank="1" shape="1">333</integer_value>
          </surface_ids>
          <type name="no_normal_flow"/>
        </boundary_conditions>
        <tensor_field name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">0.001</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="PhaseVolumeFraction">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <control_volumes>
            <face_value name="FirstOrderUpwind"/>
            <diffusion_scheme name="ElementGradient"/>
          </control_volumes>
          <conservative_advection>
            <real_value rank="0">1.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">0.05</real_value>
          </constant>
        </initial_condition>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="ReynoldsNumber">
      <diagnostic>
        <algorithm name="particle_reynolds_number" material_phase_support="multiple">
          <depends>
            <string_value lines="1">Water::Velocity,Tephra::Velocity,Water::Density</string_value>
          </depends>
          <particle_diameter>
            <real_value rank="0">48e-6</real_value>
          </particle_diameter>
          <continuous_phase_name>Water</continuous_phase_name>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="DragForce">
      <diagnostic>
        <algorithm name="vector_python_diagnostic" material_phase_support="multiple">
          <string_value type="code" language="python" lines="20">## Calculates the fluid-particle drag force interaction term
from math import sqrt, pi

vfrac_tephra = states["Tephra"].scalar_fields["PhaseVolumeFraction"]
vfrac_water = states["Water"].scalar_fields["PhaseVolumeFraction"]

velocity_tephra = states["Tephra"].vector_fields["Velocity"]
velocity_water = states["Water"].vector_fields["Velocity"]

density_tephra = states["Tephra"].scalar_fields["Density"]
density_water = states["Water"].scalar_fields["Density"]

viscosity_water = states["Water"].tensor_fields["Viscosity"]

# Particle diameter - experimental value from Carey (1997)
d = 48e-6

for i in range(field.node_count):

  # Reynolds number
  Re = (vfrac_water.node_val(i)*density_water.node_val(i)*sqrt((velocity_water.node_val(i)[0] - velocity_tephra.node_val(i)[0])**2 + (velocity_water.node_val(i)[1] - velocity_tephra.node_val(i)[1])**2)*d)/viscosity_water.node_val(0)[0][0]
  
  # Drag coefficient
  if(Re &lt; 1000):
    C = (24.0/Re)
  else:
    C = 0.44
    
  # Don't let C be NaN
  if(Re == 0):
    C = 1e16

  magnitude = sqrt((velocity_water.node_val(i)[0] - velocity_tephra.node_val(i)[0])**2 + (velocity_water.node_val(i)[1] - velocity_tephra.node_val(i)[1])**2)
  
  K = (3.0/4.0)*C*(vfrac_tephra.node_val(i)*vfrac_water.node_val(i)*density_water.node_val(i)*magnitude)/(d)

    
  Force = K*(velocity_tephra.node_val(i) - velocity_water.node_val(i))

  #Force = 6.0*pi*density_water.node_val(i)*viscosity_water.node_val(0)[0][0]*(d/2.0)*vfrac_water.node_val(i)*magnitude*(velocity_tephra.node_val(i) - velocity_water.node_val(i))

  field.set(i, -Force)</string_value>
          <depends>
            <string_value lines="1">Tephra::PhaseVolumeFraction,Tephra::Density,Tephra::Velocity,Water::PhaseVolumeFraction,Water::Density,Water::Velocity</string_value>
          </depends>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <vector_field rank="1" name="BuoyancyForce">
      <diagnostic>
        <algorithm name="vector_python_diagnostic" material_phase_support="multiple">
          <string_value type="code" language="python" lines="20">## Calculates the fluid-particle drag force interaction term
from math import sqrt, pi

vfrac_tephra = states["Tephra"].scalar_fields["PhaseVolumeFraction"]
vfrac_water = states["Water"].scalar_fields["PhaseVolumeFraction"]

velocity_tephra = states["Tephra"].vector_fields["Velocity"]
velocity_water = states["Water"].vector_fields["Velocity"]

density_tephra = states["Tephra"].scalar_fields["Density"]
density_water = states["Water"].scalar_fields["Density"]

viscosity_water = states["Water"].tensor_fields["Viscosity"]

# Particle diameter - experimental value from Carey (1997)
d = 48e-6

for i in range(field.node_count):
  
  Force = vfrac_tephra.node_val(i)*9.8*vfrac_water.node_val(i)*(density_tephra.node_val(i) - density_water.node_val(i))

  field.set(i, [0.0, -Force])</string_value>
          <depends>
            <string_value lines="1">Water::Velocity,Tephra::Velocity,Water::PhaseVolumeFraction,Tephra::PhaseVolumeFraction,Water::Density,Tephra::Density</string_value>
          </depends>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <vector_field rank="1" name="TerminalVelocity">
      <diagnostic>
        <algorithm name="vector_python_diagnostic" material_phase_support="multiple">
          <string_value type="code" language="python" lines="20">## Calculates the fluid-particle drag force interaction term
from math import sqrt, pi

vfrac_tephra = states["Tephra"].scalar_fields["PhaseVolumeFraction"]
vfrac_water = states["Water"].scalar_fields["PhaseVolumeFraction"]

velocity_tephra = states["Tephra"].vector_fields["Velocity"]
velocity_water = states["Water"].vector_fields["Velocity"]

density_tephra = states["Tephra"].scalar_fields["Density"]
density_water = states["Water"].scalar_fields["Density"]

viscosity_water = states["Water"].tensor_fields["Viscosity"]

# Particle diameter - experimental value from Carey (1997)
d = 48e-6

for i in range(field.node_count):
  relative_terminal_velocity = vfrac_water.node_val(i)*9.8*(density_tephra.node_val(i) - density_water.node_val(i))*d*d/(18.0*viscosity_water.node_val(0)[0][0])
  
  field.set(i, [0.0, -relative_terminal_velocity])</string_value>
          <depends>
            <string_value lines="1">Water::Velocity,Tephra::Velocity,Water::PhaseVolumeFraction,Tephra::PhaseVolumeFraction,Water::Density,Tephra::Density</string_value>
          </depends>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <multiphase_properties>
      <particle_diameter>
        <real_value rank="0">48e-6</real_value>
      </particle_diameter>
    </multiphase_properties>
  </material_phase>
  <multiphase_interaction>
    <fluid_particle_drag>
      <drag_correlation name="stokes"/>
    </fluid_particle_drag>
  </multiphase_interaction>
</fluidity_options>

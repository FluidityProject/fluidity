<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>mphase_rans_p1dgp2_cv_bubble_column_2D</name>
  <owner userid="gb812" />
  <tags>flml</tags>
  <problem_definition length="vlong" nprocs="4">
    <command_line>
      mpiexec flredecomp -i 1 -o 4 mphase_rans_p1dgp2_cv_bubble_column_2D mphase_rans_p1dgp2_cv_bubble_column_2D_flredecomp
      mpiexec fluidity -l mphase_rans_p1dgp2_cv_bubble_column_2D_flredecomp.flml
      </command_line>
  </problem_definition>
  <variables>
    <variable name="time" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
time=s["ElapsedTime"]["value"][-1]</variable>
    <variable name="air_y_velocity_max" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
air_y_velocity_max=s["Air"]["Velocity%2"]["max"][-1]</variable>
    <variable name="water_y_velocity_max" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
water_y_velocity_max=s["Water"]["Velocity%2"]["max"][-1]</variable>
    <variable name="particle_reynolds_number_max" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
particle_reynolds_number_max=s["Air"]["ParticleReynoldsNumber"]["max"][-1]</variable>
    <variable name="particle_reynolds_number_min" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
particle_reynolds_number_min=s["Air"]["ParticleReynoldsNumber"]["min"][-1]</variable>
    <variable name="divergence_max" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
divergence_max = s["Air"]["SumVelocityDivergence"]["max"][-1]</variable>
    <variable name="solvers_converged" language="python">import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files</variable>
    <variable name="air_vol_frac_integ" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
air_vol_frac_integ=s["Air"]["PhaseVolumeFraction"]["integral"][-1]</variable>
    <variable name="k_max" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
k_max = s["Water"]["TurbulentKineticEnergy"]["max"][-1]</variable>
    <variable name="epsilon_max" language="python">from fluidity_tools import stat_parser
s = stat_parser("bubcol_2d_rans.stat")
epsilon_max = s["Water"]["TurbulentDissipation"]["max"][-1]</variable>
  </variables>
  <pass_tests>
    <test name="Program ran to completion till 120 s" language="python">assert abs(time-120.0) &lt; 0.5</test>
    <test name="Maximum Air velocity is less than 0.62 at 120 s" language="python">assert air_y_velocity_max &lt; 0.62</test>
    <test name="Maximum Water velocity is less than 0.23 at 120 s" language="python">assert water_y_velocity_max &lt; 0.23</test>
    <test name="Maximum ParticleReynoldsNumber is less than 2050 at the 120 s" language="python">assert particle_reynolds_number_max &lt; 2050</test>
    <test name="Minimum ParticleReynoldsNumber is greater than 750 at the 120 s" language="python">assert particle_reynolds_number_min &gt; 750</test>
    <test name="Gas holdup is equal to 0.013" language="python">assert abs((air_vol_frac_integ/0.09)-0.013) &lt; 1e-3</test>
    <test name="Maximum turbulent kinetic energy is less than 0.016 at the 120 s" language="python">assert k_max &lt; 0.016</test>
    <test name="Maximum turbulent dissipation rate is less than 0.033 at the 120 s" language="python">assert epsilon_max &lt; 0.033</test>
    <test name="SumVelocityDivergence is less than 3e-10 at 120 s" language="python">assert divergence_max &lt; 3e-10</test>
    <test name="Solvers converged" language="python">assert(solvers_converged)</test>
  </pass_tests>
  <warn_tests />
</testproblem>
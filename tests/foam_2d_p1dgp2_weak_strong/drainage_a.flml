<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">drainage_a</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">foams</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="drainage_a">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">5</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">200</real_value>
      </constant>
    </dump_period>
    <output_mesh name="PressureMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.01</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">200</real_value>
    </finish_time>
    <nonlinear_iterations>
      <integer_value rank="0">50</integer_value>
      <tolerance>
        <real_value rank="0">1.0E-12</real_value>
        <infinity_norm/>
      </tolerance>
    </nonlinear_iterations>
    <steady_state>
      <tolerance>
        <real_value rank="0">1.E-10</real_value>
        <infinity_norm/>
      </tolerance>
    </steady_state>
  </timestepping>
  <physical_parameters/>
  <material_phase name="foam">
    <equation_of_state>
      <compressible>
        <foam/>
      </compressible>
    </equation_of_state>
    <scalar_field rank="0" name="Pressure">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <integrate_continuity_by_parts/>
          </continuous_galerkin>
        </spatial_discretisation>
        <atmospheric_pressure>
          <real_value rank="0">3.6e-8</real_value>
        </atmospheric_pressure>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">never</string_value>
          </poisson_pressure_solution>
          <use_projection_method/>
          <update_discretised_equation/>
        </scheme>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">5000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
    from math import exp, log, sqrt
    y=X[1]
    l = 1.0E7
    k1= 65400
    k2= 0.046849
    v=0.002
    patm=3.6E-8
    t1=sqrt(0.36/l) - sqrt(v/k1)
    t2=sqrt(0.36/l) + sqrt(v/k1)
    phi = (-y*k1/k2 + sqrt(k1/v)*log(t1/t2))*sqrt(v/k1)
    p = (v/k1)*((1+exp(phi))/(1-exp(phi)))**2
    return p</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="bottom">
          <surface_ids>
            <integer_value rank="1" shape="1">7</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <output>
          <include_previous_time_step/>
        </output>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="Density">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <no_stabilisation/>
            </stabilisation>
            <advection_terms/>
            <mass_terms/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">1</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
        </temporal_discretisation>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
    from math import exp, log, sqrt
    y=X[1]
    l = 1.0E7
    k1= 65400
    k2= 0.046849
    v=0.002
    patm=3.6E-8
    t1=sqrt(0.36/l) - sqrt(v/k1)
    t2=sqrt(0.36/l) + sqrt(v/k1)
    phi = (-y*k1/k2 + sqrt(k1/v)*log(t1/t2))*sqrt(v/k1)
    p = (v/k1)*((1+exp(phi))/(1-exp(phi)))**2
    rho = (p)*l
    return rho</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="interface">
          <surface_ids>
            <integer_value rank="1" shape="1">7</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">0.36</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <output>
          <include_previous_time_step/>
        </output>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Drainage"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <mass_terms>
              <exclude_mass_terms/>
            </mass_terms>
            <viscosity_scheme>
              <bassi_rebay/>
              <tensor_form/>
            </viscosity_scheme>
            <advection_scheme>
              <none/>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <buoyancy/>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">1.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">1.0</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="top">
          <surface_ids>
            <integer_value rank="1" shape="1">9</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="walls">
          <surface_ids>
            <integer_value rank="1" shape="2">8 10</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </x_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <vector_field name="Source" rank="1">
          <diagnostic>
            <mesh name="PressureMesh"/>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <output/>
            <stat>
              <include_in_stat/>
            </stat>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
        </vector_field>
        <vector_field name="Absorption" rank="1">
          <diagnostic>
            <mesh name="PressureMesh"/>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <output/>
            <stat>
              <include_in_stat/>
            </stat>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
          <include_pressure_correction/>
        </vector_field>
        <vector_field name="DrainageK1" rank="1">
          <prescribed>
            <mesh name="PressureMesh"/>
            <value name="WholeMesh">
              <constant>
                <real_value rank="1" dim1="dim" shape="2">0.0 65400</real_value>
              </constant>
            </value>
            <output/>
            <stat>
              <include_in_stat/>
            </stat>
            <detectors>
              <exclude_from_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </vector_field>
        <scalar_field name="DrainageK2" rank="1">
          <prescribed>
            <mesh name="PressureMesh"/>
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">0.046849</real_value>
              </constant>
            </value>
            <output/>
            <stat/>
            <detectors>
              <exclude_from_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </scalar_field>
        <output>
          <include_previous_time_step/>
        </output>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="DrainageLambda">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">1.0e7</real_value>
          </constant>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="DensityAnalytical">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
    from math import exp, log, sqrt
    y=X[1]
    l = 1.0E7
    k1= 65400
    k2= 0.046849
    v=0.002
    patm=3.6E-8
    t1=sqrt(0.36/l) - sqrt(v/k1)
    t2=sqrt(0.36/l) + sqrt(v/k1)
    phi = (-y*k1/k2 + sqrt(k1/v)*log(t1/t2))*sqrt(v/k1)
    p = (v/k1)*((1+exp(phi))/(1-exp(phi)))**2
    rho = (p)*l
    return rho</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <do_not_recalculate/>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="ScalarAbsoluteDifference">
      <diagnostic field_name_a="Density" field_name_b="DensityAnalytical">
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <relative_to_average/>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="FEDivergence">
      <diagnostic>
        <algorithm name="finite_element_divergence" material_phase_support="single" source_field_name="Velocity" source_field_type="vector">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1.0e-7</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">5000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="FoamVelocity">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0.0 0.002</real_value>
          </constant>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </vector_field>
    <vector_field rank="1" name="VelocityAnalytical">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
          </constant>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <do_not_recalculate/>
      </prescribed>
    </vector_field>
    <vector_field rank="1" name="VectorAbsoluteDifference">
      <diagnostic field_name_a="VelocityAnalytical" field_name_b="Velocity">
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <vector_field rank="1" name="FoamLiquidContentVelocity">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
  </material_phase>
</fluidity_options>

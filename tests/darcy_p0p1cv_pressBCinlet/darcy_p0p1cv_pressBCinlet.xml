<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">

<testproblem>
  <name>darcy_p0p1cv_pressBCinlet</name>
  <owner userid="btollit"/>
  <tags>flml darcy</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>
fluidity darcy_p0p1cv_pressBCinlet_1d.flml
fluidity darcy_p0p1cv_pressBCinlet_2d.flml
fluidity darcy_p0p1cv_pressBCinlet_3d.flml
    </command_line>
    <!-- One/two/three dimensional problem for darcy flow with one region and one material using p0p1cv element type testing the pressure gradient against analytic and the interstitial velocity. This tests using a diagnostic velocity absorption field associated with a mesh and momentum dg for darcy flow. This also tests the use of pressure BC for CV pressure.-->
  </problem_definition>
  <variables>
    <variable name="pressure_1d" language="python">
import vtktools
v = vtktools.vtu("darcy_p0p1cv_pressBCinlet_1d_1.vtu")
pressure_1d = v.GetScalarRange("Pressure")
    </variable>
    <variable name="inter_vel_1d" language="python">
import vtktools
v = vtktools.vtu("darcy_p0p1cv_pressBCinlet_1d_1.vtu")
inter_vel_1d = max(v.GetScalarRange("interstitial_velocity"))
    </variable>
    <variable name="pressure_2d" language="python">
import vtktools
v = vtktools.vtu("darcy_p0p1cv_pressBCinlet_2d_1.vtu")
pressure_2d = v.GetScalarRange("Pressure")
    </variable>
    <variable name="inter_vel_2d" language="python">
import vtktools
v = vtktools.vtu("darcy_p0p1cv_pressBCinlet_2d_1.vtu")
inter_vel_2d = max(v.GetScalarRange("interstitial_velocity"))
    </variable>
    <variable name="pressure_3d" language="python">
import vtktools
v = vtktools.vtu("darcy_p0p1cv_pressBCinlet_3d_1.vtu")
pressure_3d = v.GetScalarRange("Pressure")
    </variable>
    <variable name="inter_vel_3d" language="python">
import vtktools
v = vtktools.vtu("darcy_p0p1cv_pressBCinlet_3d_1.vtu")
inter_vel_3d = max(v.GetScalarRange("interstitial_velocity"))
    </variable>
  </variables>
  <pass_tests>
    <test name="change_P for 1d should equal domain_length*visc*darcy_vel_BC/perm, check relative difference to be under tolerance 1.0e-09" language="python">
change_P = abs(max(pressure_1d) - min(pressure_1d))
visc = 1.0e-04
darcy_vel_BC = 5.0
perm = 1.0e-10
domain_length = 300.0
print 'Relative error of pressure difference: ',abs((change_P - domain_length*visc*darcy_vel_BC/perm)/(domain_length*visc*darcy_vel_BC/perm))
assert abs((change_P - domain_length*visc*darcy_vel_BC/perm)/(domain_length*visc*darcy_vel_BC/perm)) &lt; 1.0e-09
    </test>
    <test name="interstitial velocity 1d should equal darcy_vel/porosity, check relative difference to be under tolerance 1.0e-09" language="python">
analytic_vel = 10.0
print 'Relative error of interstitial velocity: ',abs((inter_vel_1d - analytic_vel)/analytic_vel)
assert abs((inter_vel_1d - analytic_vel)/analytic_vel) &lt; 1.0e-09
    </test>
    <test name="change_P for 2d should equal domain_length*visc*darcy_vel_BC/perm, check relative difference to be under tolerance 1.0e-09" language="python">
change_P = abs(max(pressure_2d) - min(pressure_2d))
visc = 1.0e-04
darcy_vel_BC = 5.0
perm = 1.0e-10
domain_length = 300.0
print 'Relative error of pressure difference: ',abs((change_P - domain_length*visc*darcy_vel_BC/perm)/(domain_length*visc*darcy_vel_BC/perm))
assert abs((change_P - domain_length*visc*darcy_vel_BC/perm)/(domain_length*visc*darcy_vel_BC/perm)) &lt; 1.0e-09
    </test>
    <test name="interstitial velocity 2d should equal darcy_vel/porosity, check relative difference to be under tolerance 1.0e-09" language="python">
analytic_vel = 10.0
print 'Relative error of interstitial velocity: ',abs((inter_vel_2d - analytic_vel)/analytic_vel)
assert abs((inter_vel_2d - analytic_vel)/analytic_vel) &lt; 1.0e-09
    </test>
    <test name="change_P for 3d should equal domain_length*visc*darcy_vel_BC/perm, check relative difference to be under tolerance 1.0e-09" language="python">
change_P = abs(max(pressure_3d) - min(pressure_3d))
visc = 1.0e-04
darcy_vel_BC = 5.0
perm = 1.0e-10
domain_length = 300.0
print 'Relative error of pressure difference: ',abs((change_P - domain_length*visc*darcy_vel_BC/perm)/(domain_length*visc*darcy_vel_BC/perm))
assert abs((change_P - domain_length*visc*darcy_vel_BC/perm)/(domain_length*visc*darcy_vel_BC/perm)) &lt; 1.0e-09
    </test>
    <test name="interstitial velocity 3d should equal darcy_vel/porosity, check relative difference to be under tolerance 1.0e-09" language="python">
analytic_vel = 10.0
print 'Relative error of interstitial velocity: ',abs((inter_vel_3d - analytic_vel)/analytic_vel)
assert abs((inter_vel_3d - analytic_vel)/analytic_vel) &lt; 1.0e-09
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

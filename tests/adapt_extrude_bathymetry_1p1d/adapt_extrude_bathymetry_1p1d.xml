<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>adapt_extrude_bathymetry_1p1d</name>
  <owner userid="cwilson"/>
  <tags>flml 2dadapt</tags>
  <problem_definition length="medium" nprocs="1">
    <command_line>fluidity -v2 -l adapt_extrude_bathymetry_1p1d.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
    </variable>
    <variable name="err_n_lines" language="python">import glob
files = glob.glob1(".","*.err-?")
err_n_lines = {}
for file in files:
    fileHandle = open(file)
    log = fileHandle.read()
    logSplit = log.split("\n")
    print(file + ":")
    for line in logSplit[-10:]:
        print(line)
    err_n_lines[file] = len(logSplit)
    fileHandle.close()
</variable>
    <variable name="log_n_lines" language="python">import glob
files = glob.glob1(".","*.log-?")
log_n_lines = {}
for file in files:
    fileHandle = open(file)
    log = fileHandle.read()
    logSplit = log.split("\n")
    print(file + ":")
    for line in logSplit[-10:]:
        print(line)
    log_n_lines[file] = len(logSplit)
    fileHandle.close()
</variable>
    <variable name="domain_area" language="python">from fluidity_tools import stat_parser as stat
domain_area = stat("landslide_benchmark.stat")["Water"]["ConstantField"]["integral"]</variable>
    <variable name="water_area" language="python">from fluidity_tools import stat_parser as stat
water_area = stat("landslide_benchmark.stat")["Water"]["MaterialVolumeFraction"]["integral"]</variable>
    <variable name="landslide_area" language="python">from fluidity_tools import stat_parser as stat
landslide_area = stat("landslide_benchmark.stat")["Landslide"]["MaterialVolumeFraction"]["integral"]</variable>
    <variable name="no_nodes" language="python">from fluidity_tools import stat_parser as stat
no_nodes = stat("landslide_benchmark.stat")["CoordinateMesh"]["nodes"]</variable>
    <variable name="finish_time" language="python">from fluidity_tools import stat_parser as stat
finish_time = stat("landslide_benchmark.stat")["ElapsedTime"]["value"][-1]</variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">
      assert(solvers_converged)
    </test>
    <test name="domain_area_constant" language="python">print('% area change = ', max(abs(domain_area[1:]-domain_area[:-1]))*100/domain_area[0])
assert max(abs(domain_area[1:]-domain_area[:-1]))*100/domain_area[0] &lt; 1.E-10
</test>
    <test name="water_area_constant" language="python">print('% area change = ', max(abs(water_area[1:]-water_area[:-1]))*100/water_area[0])
assert max(abs(water_area[1:]-water_area[:-1]))*100/water_area[0] &lt; 1.E-2
</test>
    <test name="landslide_area_constant" language="python">print('% area change = ', max(abs(landslide_area[1:]-landslide_area[:-1]))*100/landslide_area[0])
assert max(abs(landslide_area[1:]-landslide_area[:-1]))*100/landslide_area[0] &lt; 1.E-2
</test>
    <test name="no_nodes_changes" language="python">print('max change no_nodes = ', max(abs(no_nodes[1:]-no_nodes[0])))
assert max(abs(no_nodes[1:]-no_nodes[0])) &gt; 0
</test>
    <test name="check_finish_time" language="python">assert abs(finish_time - 0.055) &lt; 1.E-6</test>
  </pass_tests>
</testproblem>

<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>friction-slope-swe</name>
  <owner userid="skramer"/>
  <problem_definition length="short" nprocs="1">
    <command_line>fluidity -v2 -l friction.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files</variable>
    <variable name="umin" language="python">import fluidity_tools
stat = fluidity_tools.stat_parser('friction.stat')
umin = stat['Water']['Velocity%1']['min'][-1]</variable>
    <variable name="umax" language="python">import fluidity_tools
stat = fluidity_tools.stat_parser('friction.stat')
umax = stat['Water']['Velocity%1']['max'][-1]</variable>
    <variable name="errormax" language="python">import fluidity_tools
stat = fluidity_tools.stat_parser('friction.stat')
errormax = stat['Water']['Error']['max'][-1]</variable>
    <variable name="vmax" language="python">import fluidity_tools
stat = fluidity_tools.stat_parser('friction.stat')
vmax = max(stat['Water']['Velocity%2']['max'][-1],-stat['Water']['Velocity%2']['min'][-1])</variable>
    <variable name="errorl2" language="python">import fluidity_tools
stat = fluidity_tools.stat_parser('friction.stat')
errorl2 = stat['Water']['Error']['l2norm'][-1]</variable>
    <variable name="endtime" language="python">import fluidity_tools
stat = fluidity_tools.stat_parser('friction.stat')
endtime = stat['ElapsedTime']['value'][-1]</variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">assert(solvers_converged)</test>
    <test name="TestUmin" language="python">assert(umin&gt;0.999)</test>
    <test name="TestUmax" language="python">assert(umax&lt;1.021)</test>
    <test name="TestErrorMax" language="python">assert(errormax&lt;0.025)</test>
    <test name="TestVmax" language="python">assert(vmax&lt;2.e-5)</test>
    <test name="TestErrorL2" language="python">area=1.e5*1.e3
assert(errorl2&lt;1.e-5*area)</test>
    <test name="TestEndTime" language="python">assert(endtime&lt;1.0e6)<comment>Make sure we reach a steady state</comment></test>
  </pass_tests>
</testproblem>

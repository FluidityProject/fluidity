<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">laplacian_smoothing_2d</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="src/square">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">0</real_value>
      </constant>
    </dump_period>
    <output_mesh name="CoordinateMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">1.0</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">1.0</real_value>
    </finish_time>
  </timestepping>
  <material_phase name="Fluid">
    <vector_field name="Velocity" rank="1">
      <prescribed>
        <mesh name="CoordinateMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
          </constant>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </vector_field>
  </material_phase>
  <mesh_adaptivity>
    <mesh_movement>
      <laplacian_smoothing/>
      <vector_field name="GridVelocity" rank="1">
        <diagnostic>
          <algorithm name="Internal" material_phase_support="multiple">
            <boundary_conditions name="BCs">
              <surface_ids>
                <integer_value shape="4" rank="1">1 2 3 4</integer_value>
              </surface_ids>
              <type name="dirichlet">
                <align_bc_with_cartesian>
                  <x_component>
                    <constant>
                      <real_value rank="0">0.0</real_value>
                    </constant>
                  </x_component>
                  <y_component>
                    <python>
                      <string_value lines="20" type="code" language="python">import numpy
def val(X,t):
  if X[1]&gt;=1.0:
    #return (0.0,0.1-0.4*(X[0]-0.5)**2)
    return 0.15*numpy.sin(2*numpy.pi*X[0])
  else:
    return 0.0</string_value>
                    </python>
                  </y_component>
                </align_bc_with_cartesian>
              </type>
            </boundary_conditions>
          </algorithm>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat>
            <include_in_stat/>
          </stat>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </vector_field>
    </mesh_movement>
  </mesh_adaptivity>
</fluidity_options>

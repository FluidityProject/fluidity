<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">Sphere</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">stokes</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="mesh3D">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="MaterialMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">5</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">0.08</real_value>
      </constant>
    </dump_period>
    <output_mesh name="CoordinateMesh"/>
    <stat/>
  </io>
  <particles>
    <particle_group name="Model">
      <particle_io>
        <dump_period>
          <constant>
            <real_value rank="0">0.08</real_value>
          </constant>
        </dump_period>
      </particle_io>
      <particle_subgroup name="Circle">
        <initial_position>
          <python>
            <string_value type="code" language="python" lines="20">def val(t):
  from numpy import arange,zeros,reshape,concatenate, cos, pi,sqrt

  a=50
  b=50
  d=50
  c=1786
  x=zeros(c,float)
  y=zeros(c,float)
  z=zeros(c,float)
  k=0
  for i in range(0,b):
    for j in range(0,a):
      for l in range(0,d):
        if (sqrt(((1.0*i/b)-0.5)**2 + ((1.0*j/a)-0.75)**2 + ((1.0*l/d)-0.6)**2)&lt;=0.15):
          x[k] = 1.0*i/b
          y[k] = 1.0*j/b
          z[k] = 1.0*l/b
          k = k + 1
        
  return reshape(concatenate((x,y,z)),(3,c)).T</string_value>
          </python>
        </initial_position>
        <attributes>
          <scalar_attribute name="Inside">
            <constant>
              <real_value rank="0">1</real_value>
            </constant>
          </scalar_attribute>
        </attributes>
      </particle_subgroup>
      <particle_subgroup name="Fill">
        <initial_position>
          <python>
            <string_value type="code" language="python" lines="20">def val(t):
  from numpy import arange,zeros,reshape,concatenate, cos, pi,sqrt

  a=50
  b=50
  d=50
  c=123214
  x=zeros(c,float)
  y=zeros(c,float)
  z=zeros(c,float)
  k=0
  for i in range(0,b):
    for j in range(0,a):
      for l in range(0,d):
        if (sqrt(((1.0*i/b)-0.5)**2 + ((1.0*j/a)-0.75)**2 + ((1.0*l/d)-0.6)**2)&gt;0.15):
          x[k] = 1.0*i/b
          y[k] = 1.0*j/b
          z[k] = 1.0*l/b
          k = k + 1
        
  return reshape(concatenate((x,y,z)),(3,c)).T</string_value>
          </python>
        </initial_position>
        <attributes>
          <scalar_attribute name="Inside">
            <constant>
              <real_value rank="0">0</real_value>
            </constant>
          </scalar_attribute>
        </attributes>
      </particle_subgroup>
    </particle_group>
    <moving_outside_domain>
      <delete_outside_domain/>
    </moving_outside_domain>
    <lagrangian_timestepping>
      <subcycles>
        <integer_value rank="0">1</integer_value>
      </subcycles>
      <search_tolerance>
        <real_value rank="0">1.0e-10</real_value>
      </search_tolerance>
      <rk4_guided_search/>
    </lagrangian_timestepping>
  </particles>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.001</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">8</real_value>
    </finish_time>
    <adaptive_timestep>
      <requested_cfl>
        <real_value rank="0">1.5</real_value>
      </requested_cfl>
      <courant_number name="ControlVolumeCFLNumber">
        <mesh name="MaterialMesh"/>
      </courant_number>
      <increase_tolerance>
        <real_value rank="0">1.1</real_value>
      </increase_tolerance>
    </adaptive_timestep>
  </timestepping>
  <material_phase name="Normal">
    <vector_field rank="1" name="Velocity">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
  import numpy as np
  u1 = -2*np.sin(np.pi*X[0])**2*np.sin(np.pi*X[1])*np.cos(np.pi*X[1])*np.cos(np.pi*t/8.0)
  u2 = 2*np.sin(np.pi*X[1])**2*np.sin(np.pi*X[0])*np.cos(np.pi*X[0])*np.cos(np.pi*t/8.0)
  u3 = 0
  return (u1,u2,u3)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </vector_field>
    <scalar_field rank="0" name="MaterialVolumeFraction">
      <diagnostic>
        <algorithm name="from_particles" material_phase_support="multiple">
          <particle_group name="Model">
            <particle_attribute name="Inside"/>
          </particle_group>
          <interpolation>
            <weighted_distance/>
          </interpolation>
        </algorithm>
        <mesh name="MaterialMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">0.1</real_value>
                  </constant>
                </value>
                <output/>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
      </diagnostic>
    </scalar_field>
  </material_phase>
  <material_phase name="Fill">
    <vector_field rank="1" name="Velocity">
      <aliased material_phase_name="Normal" field_name="Velocity"/>
    </vector_field>
    <scalar_field rank="0" name="MaterialVolumeFraction">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="MaterialMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
  </material_phase>
  <flredecomp>
    <final_partitioner>
      <scotch/>
    </final_partitioner>
  </flredecomp>
</fluidity_options>

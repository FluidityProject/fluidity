<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">MMS_X</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="src/MMS_X">
        <format name="gmsh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="ErrorMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">4</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">8</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">1e6</real_value>
      </constant>
    </dump_period>
    <output_mesh name="VelocityMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">999.9</real_value>
      <comment>gives a max cfl number of approximately 0.1</comment>
    </timestep>
    <finish_time>
      <real_value rank="0">1000.0</real_value>
      <comment>10.0</comment>
    </finish_time>
    <steady_state>
      <tolerance>
        <real_value rank="0">1.E-5</real_value>
        <infinity_norm/>
      </tolerance>
    </steady_state>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">1.0</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value rank="1" dim1="dim" shape="2">1.0 1.0</real_value>
            </constant>
          </value>
          <output/>
          <stat>
            <exclude_from_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="NS">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">1.0</real_value>
          </reference_density>
          <subtract_out_hydrostatic_level/>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field rank="0" name="Pressure">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <remove_stabilisation_term/>
          </continuous_galerkin>
        </spatial_discretisation>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">only first timestep</string_value>
          </poisson_pressure_solution>
          <use_projection_method/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-6</real_value>
          </relative_error>
          <absolute_error>
            <real_value rank="0">1e-15</real_value>
          </absolute_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <remove_null_space/>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <output>
          <include_previous_time_step/>
        </output>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="Density">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Boussinesq"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <no_stabilisation/>
            </stabilisation>
            <mass_terms>
              <lump_mass_matrix>
                <use_submesh/>
              </lump_mass_matrix>
            </mass_terms>
            <advection_terms/>
            <stress_terms>
              <partial_stress_form/>
            </stress_terms>
            <buoyancy/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">1.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">1.0</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1e-6</real_value>
          </relative_error>
          <absolute_error>
            <real_value rank="0">1e-15</real_value>
          </absolute_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.velocity(X)</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="all_sides">
          <surface_ids>
            <integer_value rank="1" shape="2">1 2</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <x_component>
                <python>
                  <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.u(X)</string_value>
                </python>
              </x_component>
              <y_component>
                <python>
                  <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.v(X)</string_value>
                </python>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <tensor_field name="Viscosity" rank="2">
          <diagnostic>
            <algorithm name="sediment_concentration_dependent_viscosity" material_phase_support="single"/>
            <output/>
            <stat>
              <exclude_from_stat/>
            </stat>
            <particles>
              <exclude_from_particles/>
            </particles>
          </diagnostic>
        </tensor_field>
        <vector_field name="Source" rank="1">
          <prescribed>
            <value name="WholeMesh">
              <python>
                <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.forcing_velocity(X)</string_value>
              </python>
            </value>
            <output/>
            <stat>
              <exclude_from_stat/>
            </stat>
            <detectors>
              <exclude_from_detectors/>
            </detectors>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </vector_field>
        <output/>
        <stat>
          <exclude_from_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="CFLNumber">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="PressureAnalytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
        import mms_sediment_tools as k
        return k.p(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="PressureProjection">
      <diagnostic>
        <algorithm name="scalar_galerkin_projection" material_phase_support="single" source_field_name="Pressure" source_field_type="scalar">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="PressureError">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="PressureRemeaned" source_field_1_type="scalar" source_field_2_name="PressureAnalytical" source_field_2_type="scalar">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1Copy">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" language="python" lines="20">E=state.scalar_fields["s1"]

for n in range(field.node_count):
	field.set(n,E.node_val(n))</string_value>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1Analytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s1(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="s1Projection">
      <diagnostic>
        <algorithm name="scalar_galerkin_projection" material_phase_support="single" source_field_name="s1Copy" source_field_type="scalar">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1Error">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="s1Analytical" source_field_1_type="scalar" source_field_2_name="s1Projection" source_field_2_type="scalar">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2Copy">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" language="python" lines="20">E=state.scalar_fields["s2"]

for n in range(field.node_count):
	field.set(n,E.node_val(n))</string_value>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2Analytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s2(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="s2Projection">
      <diagnostic>
        <algorithm name="scalar_galerkin_projection" material_phase_support="single" source_field_name="s2Copy" source_field_type="scalar">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2Error">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="s2Analytical" source_field_1_type="scalar" source_field_2_name="s2Projection" source_field_2_type="scalar">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadErosionRateCopy">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" language="python" lines="20">E=state.scalar_fields["s1BedloadErosionRate"]

for n in range(field.node_count):
	field.set(n,E.node_val(n))</string_value>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadErosionRateAnalytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.E_1(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadErosionRateProjection">
      <diagnostic>
        <algorithm name="scalar_galerkin_projection" material_phase_support="single" source_field_name="s1BedloadErosionRateCopy" source_field_type="scalar">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadErosionRateError">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="s1BedloadErosionRateAnalytical" source_field_1_type="scalar" source_field_2_name="s1BedloadErosionRateProjection" source_field_2_type="scalar">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <surface_integral name="s1BedloadErosionRateErrorIntegral" type="value"/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadErosionRateCopy">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" language="python" lines="20">E=state.scalar_fields["s2BedloadErosionRate"]

for n in range(field.node_count):
	field.set(n,E.node_val(n))</string_value>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadErosionRateAnalytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.E_2(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadErosionRateProjection">
      <diagnostic>
        <algorithm name="scalar_galerkin_projection" material_phase_support="single" source_field_name="s2BedloadErosionRateCopy" source_field_type="scalar">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadErosionRateError">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="s2BedloadErosionRateAnalytical" source_field_1_type="scalar" source_field_2_name="s2BedloadErosionRateProjection" source_field_2_type="scalar">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <surface_integral name="s2BedloadErosionRateErrorIntegral" type="value"/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadDepositRateCopy">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" language="python" lines="20">E=state.scalar_fields["s1BedloadDepositRate"]

for n in range(field.node_count):
	field.set(n,E.node_val(n))</string_value>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadDepositRateAnalytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.D_1(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadDepositRateProjection">
      <diagnostic>
        <algorithm name="scalar_galerkin_projection" material_phase_support="single" source_field_name="s1BedloadDepositRateCopy" source_field_type="scalar">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s1BedloadDepositRateError">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="s1BedloadDepositRateAnalytical" source_field_1_type="scalar" source_field_2_name="s1BedloadDepositRateProjection" source_field_2_type="scalar">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <surface_integral name="s1BedloadDepositRateErrorIntegral" type="value"/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadDepositRateCopy">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" language="python" lines="20">E=state.scalar_fields["s2BedloadDepositRate"]

for n in range(field.node_count):
	field.set(n,E.node_val(n))</string_value>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadDepositRateAnalytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.D_2(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadDepositRateProjection">
      <diagnostic>
        <algorithm name="scalar_galerkin_projection" material_phase_support="single" source_field_name="s2BedloadDepositRateCopy" source_field_type="scalar">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="s2BedloadDepositRateError">
      <diagnostic>
        <algorithm name="scalar_difference" material_phase_support="single" source_field_1_name="s2BedloadDepositRateAnalytical" source_field_1_type="scalar" source_field_2_name="s2BedloadDepositRateProjection" source_field_2_type="scalar">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <surface_integral name="s2BedloadDepositRateErrorIntegral" type="value"/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="PressureRemeaned">
      <diagnostic>
        <algorithm name="subtract_surface_average" material_phase_support="single" source_field_name="PressureProjection" source_field_type="scalar">
          <surface_ids>
            <integer_value rank="1" shape="1">2</integer_value>
          </surface_ids>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="VelocityAnalytical">
      <prescribed>
        <mesh name="ErrorMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
        import mms_sediment_tools as k
        return k.velocity(X)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </vector_field>
    <vector_field rank="1" name="VelocityProjection">
      <diagnostic>
        <algorithm name="vector_galerkin_projection" material_phase_support="single" source_field_name="Velocity" source_field_type="vector">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <vector_field rank="1" name="VelocityError">
      <diagnostic>
        <algorithm name="vector_difference" material_phase_support="single" source_field_1_name="VelocityProjection" source_field_1_type="vector" source_field_2_name="VelocityAnalytical" source_field_2_type="vector">
          <absolute_difference/>
        </algorithm>
        <mesh name="ErrorMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <vector_field rank="1" name="BedShearStress">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <density>
          <real_value rank="0">1.0</real_value>
        </density>
        <calculation_method>
          <drag_coefficient>
            <real_value rank="0">1.0</real_value>
          </drag_coefficient>
        </calculation_method>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </diagnostic>
    </vector_field>
    <sediment>
      <scalar_field rank="0" name="s1">
        <prognostic>
          <mesh name="VelocityMesh"/>
          <equation name="AdvectionDiffusion"/>
          <spatial_discretisation>
            <continuous_galerkin>
              <stabilisation>
                <no_stabilisation/>
              </stabilisation>
              <advection_terms/>
              <mass_terms/>
            </continuous_galerkin>
            <conservative_advection>
              <real_value rank="0">0.0</real_value>
            </conservative_advection>
          </spatial_discretisation>
          <temporal_discretisation>
            <theta>
              <real_value rank="0">0.5</real_value>
            </theta>
          </temporal_discretisation>
          <solver>
            <iterative_method name="gmres">
              <restart>
                <integer_value rank="0">30</integer_value>
              </restart>
            </iterative_method>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-6</real_value>
            </relative_error>
            <absolute_error>
              <real_value rank="0">1e-15</real_value>
            </absolute_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
          <initial_condition name="WholeMesh">
            <python>
              <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s1(X)</string_value>
            </python>
          </initial_condition>
          <boundary_conditions name="reentrainment">
            <surface_ids>
              <integer_value rank="1" shape="1">2</integer_value>
            </surface_ids>
            <type name="sediment_reentrainment">
              <algorithm>Garcia_1991</algorithm>
            </type>
          </boundary_conditions>
          <boundary_conditions name="all_sides">
            <surface_ids>
              <integer_value rank="1" shape="2">1 2</integer_value>
            </surface_ids>
            <type name="dirichlet">
              <python>
                <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s1(X)</string_value>
              </python>
            </type>
          </boundary_conditions>
          <tensor_field name="Diffusivity" rank="2">
            <prescribed>
              <value name="WholeMesh">
                <isotropic>
                  <constant>
                    <real_value rank="0">1.0</real_value>
                  </constant>
                </isotropic>
              </value>
              <output/>
              <particles>
                <exclude_from_particles/>
              </particles>
            </prescribed>
          </tensor_field>
          <scalar_field name="Source" rank="0">
            <prescribed>
              <value name="WholeMesh">
                <python>
                  <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.forcing_s1(X)</string_value>
                </python>
              </value>
              <output/>
              <stat>
                <exclude_from_stat/>
              </stat>
              <detectors>
                <exclude_from_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
            </prescribed>
          </scalar_field>
          <scalar_field name="SinkingVelocity" rank="0">
            <diagnostic>
              <mesh name="VelocityMesh"/>
              <algorithm name="Internal" material_phase_support="multiple"/>
              <output/>
              <stat/>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
            </diagnostic>
          </scalar_field>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
          <steady_state>
            <exclude_from_steady_state/>
          </steady_state>
          <consistent_interpolation/>
          <scalar_field rank="0" name="Bedload">
            <prognostic>
              <surface_ids>
                <integer_value rank="1" shape="1">2</integer_value>
              </surface_ids>
              <equation name="AdvectionDiffusion"/>
              <spatial_discretisation>
                <continuous_galerkin>
                  <stabilisation>
                    <no_stabilisation/>
                  </stabilisation>
                  <advection_terms/>
                  <mass_terms/>
                </continuous_galerkin>
                <conservative_advection>
                  <real_value rank="0">0.0</real_value>
                </conservative_advection>
              </spatial_discretisation>
              <temporal_discretisation>
                <theta>
                  <real_value rank="0">0.5</real_value>
                </theta>
              </temporal_discretisation>
              <solver>
                <iterative_method name="gmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                </iterative_method>
                <preconditioner name="sor"/>
                <relative_error>
                  <real_value rank="0">1e-6</real_value>
                </relative_error>
                <absolute_error>
                  <real_value rank="0">1e-15</real_value>
                </absolute_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
              <initial_condition name="WholeMesh">
                <python>
                  <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s1_d(X)</string_value>
                </python>
              </initial_condition>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
              <consistent_interpolation/>
              <disable_calculation/>
            </prognostic>
          </scalar_field>
          <scalar_field rank="0" name="BedloadVolumeFraction">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <exclude_from_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field rank="0" name="BedloadDepositRate">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <exclude_from_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field rank="0" name="BedloadErosionRate">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <exclude_from_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field name="UnhinderedSinkingVelocity" rank="0">
            <prescribed>
              <mesh name="VelocityMesh"/>
              <value name="WholeMesh">
                <constant>
                  <real_value rank="0">0.33</real_value>
                </constant>
              </value>
              <output/>
              <stat/>
              <detectors>
                <exclude_from_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
            </prescribed>
          </scalar_field>
          <submerged_specific_gravity>
            <real_value rank="0">0.33</real_value>
          </submerged_specific_gravity>
          <diameter>
            <real_value rank="0">1.0</real_value>
          </diameter>
        </prognostic>
      </scalar_field>
      <scalar_field rank="0" name="s2">
        <prognostic>
          <mesh name="VelocityMesh"/>
          <equation name="AdvectionDiffusion"/>
          <spatial_discretisation>
            <continuous_galerkin>
              <stabilisation>
                <no_stabilisation/>
              </stabilisation>
              <advection_terms>
                <integrate_advection_by_parts/>
              </advection_terms>
              <mass_terms/>
            </continuous_galerkin>
            <conservative_advection>
              <real_value rank="0">0.0</real_value>
            </conservative_advection>
          </spatial_discretisation>
          <temporal_discretisation>
            <theta>
              <real_value rank="0">0.5</real_value>
            </theta>
          </temporal_discretisation>
          <solver>
            <iterative_method name="gmres">
              <restart>
                <integer_value rank="0">30</integer_value>
              </restart>
            </iterative_method>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1e-6</real_value>
            </relative_error>
            <absolute_error>
              <real_value rank="0">1e-15</real_value>
            </absolute_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
          <initial_condition name="WholeMesh">
            <python>
              <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s2(X)</string_value>
            </python>
          </initial_condition>
          <boundary_conditions name="reentrainment">
            <surface_ids>
              <integer_value rank="1" shape="1">2</integer_value>
            </surface_ids>
            <type name="sediment_reentrainment">
              <algorithm>Garcia_1991</algorithm>
            </type>
          </boundary_conditions>
          <boundary_conditions name="all_sides">
            <surface_ids>
              <integer_value rank="1" shape="2">1 2</integer_value>
            </surface_ids>
            <type name="dirichlet">
              <python>
                <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s2(X)</string_value>
              </python>
            </type>
          </boundary_conditions>
          <tensor_field name="Diffusivity" rank="2">
            <prescribed>
              <value name="WholeMesh">
                <isotropic>
                  <constant>
                    <real_value rank="0">1.0</real_value>
                  </constant>
                </isotropic>
              </value>
              <output/>
              <particles>
                <exclude_from_particles/>
              </particles>
            </prescribed>
          </tensor_field>
          <scalar_field name="Source" rank="0">
            <prescribed>
              <value name="WholeMesh">
                <python>
                  <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.forcing_s2(X)</string_value>
                </python>
              </value>
              <output/>
              <stat>
                <exclude_from_stat/>
              </stat>
              <detectors>
                <exclude_from_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
            </prescribed>
          </scalar_field>
          <scalar_field name="SinkingVelocity" rank="0">
            <diagnostic>
              <mesh name="VelocityMesh"/>
              <algorithm name="Internal" material_phase_support="multiple"/>
              <output/>
              <stat/>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
            </diagnostic>
          </scalar_field>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
          <steady_state>
            <exclude_from_steady_state/>
          </steady_state>
          <consistent_interpolation/>
          <scalar_field rank="0" name="Bedload">
            <prognostic>
              <surface_ids>
                <integer_value rank="1" shape="1">2</integer_value>
              </surface_ids>
              <equation name="AdvectionDiffusion"/>
              <spatial_discretisation>
                <continuous_galerkin>
                  <stabilisation>
                    <no_stabilisation/>
                  </stabilisation>
                  <advection_terms/>
                  <mass_terms/>
                </continuous_galerkin>
                <conservative_advection>
                  <real_value rank="0">0.0</real_value>
                </conservative_advection>
              </spatial_discretisation>
              <temporal_discretisation>
                <theta>
                  <real_value rank="0">0.5</real_value>
                </theta>
              </temporal_discretisation>
              <solver>
                <iterative_method name="gmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                </iterative_method>
                <preconditioner name="sor"/>
                <relative_error>
                  <real_value rank="0">1e-6</real_value>
                </relative_error>
                <absolute_error>
                  <real_value rank="0">1e-15</real_value>
                </absolute_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
              <initial_condition name="WholeMesh">
                <python>
                  <string_value type="code" language="python" lines="20">def val(X,t):
   import mms_sediment_tools as k
   return k.s2_d(X)</string_value>
                </python>
              </initial_condition>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
              <consistent_interpolation/>
              <disable_calculation/>
            </prognostic>
          </scalar_field>
          <scalar_field rank="0" name="BedloadVolumeFraction">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <exclude_from_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field rank="0" name="BedloadDepositRate">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <exclude_from_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field rank="0" name="BedloadErosionRate">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
              <steady_state>
                <exclude_from_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field name="UnhinderedSinkingVelocity" rank="0">
            <prescribed>
              <mesh name="VelocityMesh"/>
              <value name="WholeMesh">
                <constant>
                  <real_value rank="0">0.66</real_value>
                </constant>
              </value>
              <output/>
              <stat/>
              <detectors>
                <exclude_from_detectors/>
              </detectors>
              <particles>
                <exclude_from_particles/>
              </particles>
            </prescribed>
          </scalar_field>
          <submerged_specific_gravity>
            <real_value rank="0">0.66</real_value>
          </submerged_specific_gravity>
          <diameter>
            <real_value rank="0">2.0</real_value>
          </diameter>
        </prognostic>
      </scalar_field>
      <scalar_field rank="0" name="SedimentBedActiveLayerD50">
        <diagnostic>
          <surface_ids>
            <integer_value rank="1" shape="1">2</integer_value>
          </surface_ids>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="VelocityMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
          <steady_state>
            <exclude_from_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
      <scalar_field rank="0" name="SedimentBedActiveLayerSigma">
        <diagnostic>
          <surface_ids>
            <integer_value rank="1" shape="1">2</integer_value>
          </surface_ids>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="VelocityMesh"/>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
          <steady_state>
            <exclude_from_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
      <tensor_field rank="2" name="ZeroSedimentConcentrationViscosity">
        <prescribed>
          <mesh name="VelocityMesh"/>
          <value name="WholeMesh">
            <anisotropic_symmetric>
              <constant>
                <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="2 2">1.0 1.0 1.0 1.0</real_value>
              </constant>
            </anisotropic_symmetric>
          </value>
          <output/>
          <particles>
            <exclude_from_particles/>
          </particles>
        </prescribed>
      </tensor_field>
    </sediment>
  </material_phase>
</fluidity_options>

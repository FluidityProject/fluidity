<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>parallel_vertical_extrapolation</name>
  <owner userid="skramer"/>
  <problem_definition length="short" nprocs="3">
    <command_line>mpiexec ../../bin/flredecomp -l -i 1 -o 3 input1 input1_NP3
mpiexec ../../bin/fluidity -v2 -l input1_NP3.flml
mpiexec ../../bin/flredecomp -l -i 1 -o 3 input2 input2_NP3
mpiexec ../../bin/fluidity -v2 -l input2_NP3.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="errors" language="python">from vtktools import vtu
from numpy import cos, sin, pi, sqrt
from numpy.linalg import norm

v = vtu('output1_1.pvtu')

x,y,z = v.GetLocations().T
fs = v.GetScalarField('FreeSurface')
db = v.GetScalarField('DistanceToBottom')
dt = v.GetScalarField('DistanceToTop')

rms = lambda x: norm(x)/sqrt(len(x))

errors = {
  'FreeSurface': rms(fs - 0.01*cos(2*pi*x)*sin(4*pi*y)),
  'DistanceToBottom': rms(db - z),
  'DistanceToTop': rms(dt - (1+fs-z)),
  'Height': rms(dt+db - (1+fs))
 }
</variable>
    <variable name="errors_linear_fs" language="python">from vtktools import vtu
from numpy import cos, sin, pi, sqrt
from numpy.linalg import norm

v = vtu('output2_1.pvtu')

x,y,z = v.GetLocations().T
fs = v.GetScalarField('FreeSurface')
db = v.GetScalarField('DistanceToBottom')
dt = v.GetScalarField('DistanceToTop')

rms = lambda x: norm(x)/sqrt(len(x))

errors_linear_fs = {
  'FreeSurface': rms(fs - 0.01*(x+y)),
  'DistanceToBottom': rms(db - z),
  'DistanceToTop': rms(dt - (1+fs-z)),
  'Height': rms(dt+db - (1+fs))
 }</variable>
  </variables>
  <pass_tests>
    <test name="free_surface_error" language="python">assert errors['FreeSurface'] &lt; 0.005<comment>This is interpolated from an underresolved sin*cos so we expect some error</comment></test>
    <test name="height_surface_error" language="python">assert errors['Height'] &lt; 0.005<comment>This is interpolated from an underresolved sin*cos so we expect some error</comment></test>
    <test name="distance_to_top_error" language="python">assert errors['DistanceToTop'] &lt; 0.005<comment>This is interpolated from an underresolved sin*cos so we expect some error</comment></test>
    <test name="distance_to_bottom_error" language="python">assert errors['DistanceToBottom'] &lt; 1e-9<comment>With flat bottom should always just be equal to z coordinate</comment></test>
    <test name="linear_free_surface_error" language="python">assert errors_linear_fs['FreeSurface'] &lt; 1e-7<comment>Interpolated from linear expression, so error should be small</comment></test>
    <test name="linear_height_surface_error" language="python">assert errors_linear_fs['Height'] &lt; 1e-7<comment>Interpolated from linear expression, so error should be small</comment></test>
    <test name="linear_distance_to_top_error" language="python">assert errors_linear_fs['DistanceToTop'] &lt; 1e-7<comment>Interpolated from linear expression, so error should be small</comment></test>
    <test name="linear_distance_to_bottom_error" language="python">assert errors_linear_fs['DistanceToBottom'] &lt; 1e-9<comment>With flat bottom should always just be equal to z coordinate</comment></test>
  </pass_tests>
</testproblem>

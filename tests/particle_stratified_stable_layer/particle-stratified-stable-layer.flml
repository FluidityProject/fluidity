<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">2d_entrainment</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">multimaterial</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="ar2">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="MaterialMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="P1DG_Mesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">5</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">0.00075</real_value>
      </constant>
    </dump_period>
    <output_mesh name="MaterialMesh"/>
    <stat>
      <output_at_start/>
      <output_before_adapts/>
      <output_after_adapts/>
    </stat>
  </io>
  <particles>
    <particle_group name="Chem">
      <particle_io>
        <dump_period>
          <constant>
            <real_value rank="0">0.00075</real_value>
          </constant>
        </dump_period>
      </particle_io>
      <particle_spawning>
        <mesh name="CoordinateMesh"/>
        <min_cv_threshhold>
          <integer_value rank="0">10</integer_value>
        </min_cv_threshhold>
        <max_cv_threshhold>
          <integer_value rank="0">40</integer_value>
        </max_cv_threshhold>
        <spawn_location>
          <radius>
            <real_value rank="0">0.3</real_value>
          </radius>
        </spawn_location>
        <spawn_attributes>
          <copy_parent_attributes/>
        </spawn_attributes>
        <subgroup_spawning_caps>
          <percentage>
            <real_value rank="0">99.9</real_value>
          </percentage>
        </subgroup_spawning_caps>
      </particle_spawning>
      <particle_subgroup name="Fill">
        <initial_position>
          <python>
            <string_value type="code" language="python" lines="20">def val(t):
  from numpy import arange,zeros,reshape,concatenate,cos,pi,sqrt
  import math
  res=25
  lres=25
  pres=20.0
  c=18480
  x=zeros(c,float)
  y=zeros(c,float)
  k=0

  dx=1.0/(sqrt(pres)*res)
  dy=1.0/(sqrt(pres)*res)
  a=int(math.ceil(3./dx))
  b=int(math.ceil(1./dy))
  for i in range(0,a):
    for j in range(0,b):
      if ((1.0*j/b)&lt;0.54):
        if ((1.0*j/b)&gt;0.5):
          k=k+1
          x[k]=3.0*i/a
          y[k]=1.0*j/b
  dx=1.0/(sqrt(pres)*lres)
  dy=1.0/(sqrt(pres)*lres)
  a=int(math.ceil(3./dx))
  b=int(math.ceil(1./dy))
  for i in range(0,a):
    for j in range(0,b):
      if ((1.0*j/b)&gt;=0.54):
        x[k]=3.0*i/a
        y[k]=1.0*j/b
        k=k+1

  return reshape(concatenate((x,y)),(2,c)).T</string_value>
          </python>
        </initial_position>
        <attributes>
          <scalar_attribute name="Chem1">
            <constant>
              <real_value rank="0">0</real_value>
            </constant>
          </scalar_attribute>
        </attributes>
      </particle_subgroup>
      <particle_subgroup name="Bot">
        <initial_position>
          <python>
            <string_value type="code" language="python" lines="20">def val(t):
  from numpy import arange,zeros,reshape,concatenate,cos,pi,sqrt
  import math
  res=25
  lres=25
  pres=20.0
  c=19152
  x=zeros(c,float)
  y=zeros(c,float)
  k=0
  dx=1.0/(sqrt(pres)*res)
  dy=1.0/(sqrt(pres)*res)
  a=int(math.ceil(3./dx))
  b=int(math.ceil(1./dy))
  for i in range(0,a):
    for j in range(0,b):
        if ((1.0*j/b)&lt;= 0.5):
          if ((1.0*j/b)&gt; 0.46):
            x[k]=3.0*i/a
            y[k]=1.0*j/b
            k=k+1
  dx=1.0/(sqrt(pres)*lres)
  dy=1.0/(sqrt(pres)*lres)
  a=int(math.ceil(3./dx))
  b=int(math.ceil(1./dy))
  for i in range(0,a):
    for j in range(0,b):
        if ((1.0*j/b)&lt;= 0.46):
          x[k]=3.0*i/a
          y[k]=1.0*j/b
          k=k+1
  return reshape(concatenate((x,y)),(2,c)).T</string_value>
          </python>
        </initial_position>
        <attributes>
          <scalar_attribute name="Chem1">
            <constant>
              <real_value rank="0">1</real_value>
            </constant>
          </scalar_attribute>
        </attributes>
      </particle_subgroup>
    </particle_group>
    <moving_outside_domain>
      <delete_outside_domain/>
    </moving_outside_domain>
    <lagrangian_timestepping>
      <subcycles>
        <integer_value rank="0">1</integer_value>
      </subcycles>
      <search_tolerance>
        <real_value rank="0">1.0e-10</real_value>
      </search_tolerance>
      <rk4_guided_search/>
    </lagrangian_timestepping>
  </particles>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">1e-10</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">0.02</real_value>
    </finish_time>
    <adaptive_timestep>
      <requested_cfl>
        <real_value rank="0">2.5</real_value>
      </requested_cfl>
      <courant_number name="ControlVolumeCFLNumber">
        <mesh name="MaterialMesh"/>
      </courant_number>
      <increase_tolerance>
        <real_value rank="0">1.1</real_value>
      </increase_tolerance>
    </adaptive_timestep>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">1.0e5</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value rank="1" dim1="dim" shape="2">0.0 -1.0</real_value>
            </constant>
          </value>
          <output>
            <exclude_from_vtu/>
          </output>
          <stat>
            <exclude_from_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
          <particles>
            <exclude_from_particles/>
          </particles>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="Bottom">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">1.0</real_value>
          </reference_density>
          <temperature_dependency>
            <reference_temperature>
              <real_value rank="0">0.0</real_value>
            </reference_temperature>
            <thermal_expansion_coefficient>
              <real_value rank="0">1.0</real_value>
            </thermal_expansion_coefficient>
          </temperature_dependency>
          <subtract_out_hydrostatic_level/>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field rank="0" name="Pressure">
      <prognostic>
        <mesh name="CoordinateMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <test_continuity_with_cv_dual/>
          </continuous_galerkin>
        </spatial_discretisation>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">never</string_value>
          </poisson_pressure_solution>
          <use_projection_method>
            <full_schur_complement>
              <inner_matrix name="FullMomentumMatrix"/>
              <preconditioner_matrix name="ScaledPressureMassMatrix"/>
            </full_schur_complement>
          </use_projection_method>
        </scheme>
        <solver>
          <iterative_method name="fgmres"/>
          <preconditioner name="ksp">
            <solver>
              <iterative_method name="cg"/>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1.0e-5</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
          </preconditioner>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">10000</integer_value>
          </max_iterations>
          <remove_null_space/>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </diagnostics>
        </solver>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <exclude_from_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="Density">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="MaterialMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="LinearMomentum"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <no_stabilisation/>
            </stabilisation>
            <mass_terms>
              <exclude_mass_terms/>
            </mass_terms>
            <advection_terms>
              <exclude_advection_terms/>
            </advection_terms>
            <stress_terms>
              <partial_stress_form/>
            </stress_terms>
            <buoyancy/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">1.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">1</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="gamg"/>
          <relative_error>
            <real_value rank="0">1.0e-12</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <multigrid_near_null_space>
            <all_components/>
            <all_rotations/>
          </multigrid_near_null_space>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="TopBottom">
          <surface_ids>
            <integer_value rank="1" shape="2">12 14</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="Sides">
          <surface_ids>
            <integer_value rank="1" shape="1">13 15</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </x_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <tensor_field name="Viscosity" rank="2">
          <prescribed>
            <mesh name="CoordinateMesh"/>
            <value name="WholeMesh">
              <anisotropic_symmetric>
                <constant>
                  <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="2 2">1.0 1.0 1.0 1.0</real_value>
                </constant>
              </anisotropic_symmetric>
            </value>
            <output>
              <exclude_from_vtu/>
            </output>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <adaptivity_options>
          <absolute_measure>
            <vector_field rank="1" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="1" dim1="dim" shape="2">10.0 10.0</real_value>
                  </constant>
                </value>
                <output/>
                <stat>
                  <include_in_stat/>
                </stat>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </vector_field>
          </absolute_measure>
        </adaptivity_options>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="Temperature">
      <prognostic>
        <mesh name="CoordinateMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <control_volumes>
            <face_value name="FiniteElement">
              <limit_face_value>
                <limiter name="Sweby">
                  <slopes/>
                  <project_upwind_value_from_point>
                    <bound_projected_value_locally/>
                    <store_upwind_elements>
                      <store_upwind_quadrature/>
                    </store_upwind_elements>
                  </project_upwind_value_from_point>
                </limiter>
              </limit_face_value>
            </face_value>
            <diffusion_scheme name="ElementGradient"/>
          </control_volumes>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.5</real_value>
          </theta>
          <control_volumes>
            <number_advection_iterations>
              <integer_value rank="0">5</integer_value>
            </number_advection_iterations>
          </control_volumes>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1e-04</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <print_norms/>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
  from math import sin, cos, pi
  if X[1] &lt;= 0.1:
    T = (1-5*X[1])+0.05*sin(10*pi*X[1])*(1-cos(2/3*3*pi*X[0]))
  elif X[1] &gt;= 0.9:
    T = (5-5*X[1])+0.05*sin(10*pi*X[1])*(1-cos(2/3*3*pi*X[0]))
  else:
    T = 0.5

  T = min(T,1.0)
  T = max(T,0.0)
  return T</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="HotBase">
          <surface_ids>
            <integer_value rank="1" shape="1">12</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">1.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <boundary_conditions name="Top">
          <surface_ids>
            <integer_value rank="1" shape="1">14</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <tensor_field name="Diffusivity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <python>
                  <string_value type="code" language="python" lines="20">def val(X,t):
  import setup_vals as constants
  kappa = constants.kappa
  return kappa</string_value>
                </python>
              </isotropic>
            </value>
            <output/>
            <particles>
              <exclude_from_particles/>
            </particles>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <surface_integral name="Top" type="gradient_normal">
            <surface_ids>
              <integer_value rank="1" shape="1">14</integer_value>
            </surface_ids>
            <normalise/>
          </surface_integral>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">0.01</real_value>
                  </constant>
                </value>
                <output/>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="MaterialVolumeFraction">
      <diagnostic>
        <algorithm name="from_particles" material_phase_support="multiple">
          <particle_group name="Chem">
            <particle_attribute name="Chem1"/>
          </particle_group>
          <interpolation>
            <weighted_distance/>
          </interpolation>
        </algorithm>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">0.1</real_value>
                  </constant>
                </value>
                <output/>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="Entrainment">
      <diagnostic>
        <algorithm name="scalar_python_diagnostic" material_phase_support="single">
          <string_value type="code" language="python" lines="20"># Get coordinate field and material volume fraction from state:
P  = state.scalar_fields["Position"]
assert(P.node_count == field.node_count)
VF = state.scalar_fields["Projected_MVF"]
assert(VF.node_count == field.node_count)

# Set contribution to zero below cutoff depth - i.e. 0.5
for i in range(field.node_count):
  val = (1.0-VF.node_val(i))*P.node_val(i)
  field.set(i,val)</string_value>
          <depends>
            <string_value lines="1">Position, Projected_MVF</string_value>
          </depends>
        </algorithm>
        <mesh name="P1DG_Mesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="Position">
      <prescribed>
        <mesh name="P1DG_Mesh"/>
        <value name="Top">
          <region_ids>
            <integer_value rank="1" shape="1">16</integer_value>
          </region_ids>
          <constant>
            <real_value rank="0">1.0</real_value>
          </constant>
        </value>
        <value name="Bottom">
          <region_ids>
            <integer_value rank="1" shape="1">17</integer_value>
          </region_ids>
          <constant>
            <real_value rank="0">0.0</real_value>
          </constant>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </scalar_field>
    <scalar_field rank="0" name="Projected_MVF">
      <diagnostic>
        <algorithm name="scalar_copy" material_phase_support="single" source_field_name="MaterialVolumeFraction" source_field_type="scalar"/>
        <mesh name="P1DG_Mesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="DiagnosticCoordinate">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="MaterialMesh"/>
        <output>
          <exclude_from_vtu/>
        </output>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
  </material_phase>
  <material_phase name="Top">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">0.1</real_value>
          </reference_density>
          <temperature_dependency>
            <reference_temperature>
              <real_value rank="0">0.0</real_value>
            </reference_temperature>
            <thermal_expansion_coefficient>
              <real_value rank="0">10.0</real_value>
            </thermal_expansion_coefficient>
          </temperature_dependency>
        </linear>
      </fluids>
    </equation_of_state>
    <vector_field rank="1" name="Velocity">
      <aliased material_phase_name="Bottom" field_name="Velocity"/>
    </vector_field>
    <scalar_field rank="0" name="MaterialVolumeFraction">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="MaterialMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field rank="0" name="Temperature">
      <aliased material_phase_name="Bottom" field_name="Temperature"/>
    </scalar_field>
  </material_phase>
  <flredecomp>
    <final_partitioner>
      <zoltan>
        <method>
          <string_value lines="1">hypergraph</string_value>
        </method>
      </zoltan>
    </final_partitioner>
  </flredecomp>
</fluidity_options>

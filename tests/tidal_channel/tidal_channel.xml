<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>Channel forced on one side with periodic tide and closed other end, using a GMSH mesh file.</name>
  <owner userid="acreech" />
  <tags>flml</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>fluidity -v3 -l  channel.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
    </variable>
    <variable name="l2norm_error" language="python">
# l2-norm error with analytical solution
import fluidity_tools
s=fluidity_tools.stat_parser('channel.stat')
area=1e6*1e5
l2norm_error=s['water']['ScalarAbsoluteDifference']['l2norm'][-100:].sum()/area
    </variable>
    <variable name="infnorm_error" language="python">
# l2-norm error with analytical solution
import fluidity_tools
s=fluidity_tools.stat_parser('channel.stat')
infnorm_error=s['water']['ScalarAbsoluteDifference']['max'][-100:].max()
    </variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">
      assert(solvers_converged)
    </test>
    <test name="l2norm_error smaller than 1e-3" language="python">
assert(l2norm_error &lt; 1e-3)
    </test>
    <test name="infnorm_error smaller than 0.22" language="python">
assert(infnorm_error &lt; 0.22)
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>
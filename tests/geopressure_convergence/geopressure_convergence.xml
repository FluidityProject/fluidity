<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>Geopressure convergence test</name>
  <owner userid="piggt01"/>
  <tags>flml parallel zoltan<comment>zoltan tag added due to issue with python imports with libsam and flredecomp.</comment></tags>
  <problem_definition length="medium" nprocs="2">
    <command_line>mpiexec ../../bin/flredecomp -i 1 -o 2 -v -l geopressure_8 geopressure_8_flredecomp &amp;&amp;
	mpiexec ../../bin/flredecomp -i 1 -o 2 -v -l geopressure_16 geopressure_16_flredecomp &amp;&amp;
	mpiexec ../../bin/flredecomp -i 1 -o 2 -v -l geopressure_32 geopressure_32_flredecomp &amp;&amp;
	mpiexec ../../bin/flredecomp -i 1 -o 2 -v -l geopressure_64 geopressure_64_flredecomp &amp;&amp;
      make clean-run; rm -f 8.log 16.log 32.log 64.log;
mpiexec ../../bin/fluidity -v2 geopressure_8_flredecomp.flml &gt; 8.log;
mpiexec ../../bin/fluidity -v2 geopressure_16_flredecomp.flml &gt; 16.log;
mpiexec ../../bin/fluidity -v2 geopressure_32_flredecomp.flml &gt; 32.log;
mpiexec ../../bin/fluidity -v2 geopressure_64_flredecomp.flml &gt; 64.log;</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files</variable>
    <variable name="l2_errors" language="python">import fluidity_tools

l2_errors = []
for i in [8, 16, 32, 64]:
  s = fluidity_tools.stat_parser("geopressure_" + str(i) + ".stat")
  l2_errors.append(s["Fluid"]["ScalarAbsoluteDifference"]["l2norm"])</variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">assert(solvers_converged)</test>
    <test name="Expected convergence (L2 norm)" language="python">import math

import fluidity_tools

convergence = []
for i in range(1, len(l2_errors)):
  err1 = l2_errors[i]
  err2 = l2_errors[i - 1]
  
  convergence.append(math.log(err2 / err1) / math.log(2.0))

print convergence

fluidity_tools.compare_variable(convergence[0], 3.0, 0.07)
fluidity_tools.compare_variable(convergence[1], 3.0, 0.03)
fluidity_tools.compare_variable(convergence[2], 3.0, 0.02)</test>
  </pass_tests>
  <warn_tests/>
</testproblem>

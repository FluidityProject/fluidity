<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>sinking_velocity</name>
  <owner userid="dham"/>
  <tags>flml</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>fluidity  sinking_velocity.flml </command_line>
    <!-- Check that the sinking velocity term works. -->
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
    </variable>
    <variable name="detritus_initial" language="python">
from fluidity_tools import stat_parser
s = stat_parser("sinking_velocity.stat")
detritus_initial = s["Water"]["Detritus"]["integral"][0]
    </variable>
    <variable name="detritus_final" language="python">
from fluidity_tools import stat_parser
s = stat_parser("sinking_velocity.stat")
detritus_final = s["Water"]["Detritus"]["integral"][-1]
    </variable>
    <variable name="mixed_layer_detritus_final" language="python">
from fluidity_tools import stat_parser
s = stat_parser("sinking_velocity.stat")
mixed_layer_detritus_final = s["Water"]["MixedLayerDetritus"]["integral"][-1]
    </variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">
      assert(solvers_converged)
    </test>
    <test name="Detritus is conserved" language="python">
import fluidity_tools
fluidity_tools.compare_variable(detritus_final, detritus_initial, 2.0e-8)
    </test>
    <test name="MixedLayerDetritus vanishes" language="python">
assert (abs(mixed_layer_detritus_final)&lt;1.0)
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

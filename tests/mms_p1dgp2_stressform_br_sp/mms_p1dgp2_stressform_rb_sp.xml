<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE testproblem SYSTEM "regressiontest.dtd">
<testproblem>
  <name>MMS test of partial stress form for P1DGP2 with bassi-rebay viscosity scheme</name>
  <owner userid="sp911"/>
  <tags>flml</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>fluidity MMS_A.flml &gt; MMS_A.log; fluidity MMS_B.flml &gt; MMS_B.log; fluidity MMS_C.flml &gt; MMS_C.log; fluidity MMS_D.flml &gt; MMS_D.log</command_line>
  </problem_definition>
  <variables>
    <variable name="convergence" language="python">
from fluidity_tools import stat_parser as stat
from vtktools import *
from math import log
import numpy as np

meshes = [['A','B'], ['B','C'], ['C','D']]

print('')
print('ORDER OF CONVERGENCE')
print('-------------------------------------------')

print('VelocityError:')
print('-------------------------------------------')

for i, mesh in enumerate(meshes):

    a_error_x = stat("MMS_"+str(mesh[0])+".stat")["NS"]["VelocityError%1"]["l2norm"][-1]
    b_error_x = stat("MMS_"+str(mesh[1])+".stat")["NS"]["VelocityError%1"]["l2norm"][-1]
    a_error_y = stat("MMS_"+str(mesh[0])+".stat")["NS"]["VelocityError%2"]["l2norm"][-1]
    b_error_y = stat("MMS_"+str(mesh[1])+".stat")["NS"]["VelocityError%2"]["l2norm"][-1]

    ratio_x = a_error_x / b_error_x
    ratio_y = a_error_y / b_error_y

    print(mesh[0] + '-&gt;' + mesh[1] + ': ', [log(ratio_x, 2), log(ratio_y, 2)])

    convergence = min(log(ratio_x, 2), log(ratio_y, 2))

print('-------------------------------------------')
</variable>
  </variables>
  <pass_tests>
    <test name="velocity convergence order &gt; 1.9" language="python">
assert(convergence &gt; 1.9)
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

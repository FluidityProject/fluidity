<?xml version="1.0" encoding="UTF-8" ?>

<testproblem>
  <name>Testing of particle diagnostic fields in serial, particles check changes in the temperature field and their position relative to the last timestep. Variables are tested against diagnostics from a successful run.</name>
  <owner userid="cmath"/>
  <tags>flml</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>        
../../bin/fluidity -v3 -l particle-diagnostic-fields.flml
    </command_line>
  </problem_definition>
  <variables>
    <variable name="MaxXtest" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
MaxXtest= s['BoussinesqFluid']['XChange']['max'][-1]
print ("max X",MaxXtest)
    </variable>
    <variable name="MinXtest" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
MinXtest= s['BoussinesqFluid']['XChange']['min'][-1]
print ("min X",MinXtest)
    </variable>
    <variable name="Xl2norm" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
Xl2norm= s['BoussinesqFluid']['XChange']['l2norm'][-1]
print ("X l2norm",Xl2norm)
    </variable>
    <variable name="Xintegral" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
Xintegral= s['BoussinesqFluid']['XChange']['integral'][-1]
print ("X integral",Xintegral)
    </variable>
    <variable name="MaxYtest" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
MaxYtest= s['BoussinesqFluid']['YChange']['max'][-1]
print ("max Y",MaxYtest)
    </variable>
    <variable name="MinYtest" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
MinYtest= s['BoussinesqFluid']['YChange']['min'][-1]
print ("min Y",MinYtest)
    </variable>
    <variable name="Yl2norm" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
Yl2norm= s['BoussinesqFluid']['YChange']['l2norm'][-1]
print ("Y l2norm",Yl2norm)
    </variable>
    <variable name="Yintegral" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
Yintegral= s['BoussinesqFluid']['YChange']['integral'][-1]
print ("Y integral",Yintegral)
    </variable>
    <variable name="MaxTemptest" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
MaxTemptest= s['BoussinesqFluid']['TempChange']['max'][-1]
print ("max Temp",MaxTemptest)
    </variable>
    <variable name="MinTemptest" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
MinTemptest= s['BoussinesqFluid']['TempChange']['min'][-1]
print ("min Temp",MinTemptest)
    </variable>
    <variable name="Templ2norm" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
Templ2norm= s['BoussinesqFluid']['TempChange']['l2norm'][-1]
print ("Temp l2norm",Templ2norm)
    </variable>
    <variable name="Tempintegral" language="python">
import numpy as np
from fluidity_tools import stat_parser
s = stat_parser("particle_attributes.stat")
Tempintegral= s['BoussinesqFluid']['TempChange']['integral'][-1]
print ("Temp integral",Tempintegral)
    </variable>
    <variable name="Walltime" language="python">
from fluidity_tools import stat_parser
import numpy as np

s = stat_parser('particle_attributes.stat')
Walltime = s['ElapsedWallTime']["value"][-1]
print ("Total wall time", Walltime)
    </variable>
  </variables>
  <pass_tests>
    <test name="MaxX" language="python">
assert MaxXtest &gt; 0.99
    </test>
    <test name="MinX" language="python">
assert MinXtest &lt; 0.01
    </test>
    <test name="Xl2" language="python">
assert Xl2norm &gt; 0.98
    </test>
    <test name="Xint" language="python">
assert Xintegral &lt; 1e-3
    </test>
    <test name="MaxY" language="python">
assert MaxYtest &gt; 0.99
    </test>
    <test name="MinY" language="python">
assert MinYtest &lt; 0.01
    </test>
    <test name="Yl2" language="python">
assert Yl2norm &gt; 0.98
    </test>
    <test name="Yint" language="python">
assert Yintegral &lt; 1e-3
    </test>
    <test name="MaxTemp" language="python">
assert MaxTemptest &gt; 0.9
    </test>
    <test name="MinTemp" language="python">
assert MinTemptest &lt; 0.01
    </test>
    <test name="Templ2" language="python">
assert Templ2norm &gt; 0.12
assert Templ2norm &lt; 0.14    
    </test>
    <test name="Tempint" language="python">
assert Tempintegral &gt; 0.03
assert Tempintegral &lt; 0.05
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

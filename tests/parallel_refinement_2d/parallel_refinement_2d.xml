<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>parallel_refinement_2d<comment>This tests refinement in parallel. We start from a uniform mesh of 10x10 in a unit square box, i.e. dx~0.1. There's no interpolation error specified, so it should just refine to a uniform mesh according to the maximum edge length of 0.01. This is run on 3 cores. On master this fails because of it failing to move around the halos sufficiently so that we can refine everywhere. With he new halo locking strategy that only locks a single row of elements this passes.</comment></name>
  <owner userid="skramer"/>
  <problem_definition length="vshort" nprocs="3">
    <command_line>mpiexec flredecomp -i 1 -o 3 refine refinep &amp;&amp;
mpiexec fluidity -v2 -l refinep.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="cell_area_stats" language="python">from fluidity_tools import stat_parser
stat=stat_parser('refine.stat')
cell_area_stats = stat['Fields']['CellArea']</variable>
    <variable name="mesh_stats" language="python">from fluidity_tools import stat_parser
stat=stat_parser('refine.stat')
mesh_stats = stat['CoordinateMesh']</variable>
  </variables>
  <pass_tests>
    <test name="min_cell_area" language="python">assert cell_area_stats['min']&gt;4e-6<comment>We've asked for a max. edge length of 0.01. This means a max area (for equilateral) of 0.5*sin(pi/3)*0.01*0.01 ~ 4e-5. We allow an order smaller area, i.e roughly sqrt(10) smaller for edge lengths.</comment></test>
    <test name="max_cell_area" language="python">assert cell_area_stats['max']&lt;4e-4<comment>This is to check we've refined everywhere. We've asked for a max. edge length of 0.01. This means a max area (for equilateral) of 0.5*sin(pi/3)*0.01*0.01 ~ 4e-5. We allow an area that is 10 times bigger, i.e. edges that are sqrt(10) times as long.</comment></test>
    <test name="number_of_elements" language="python">assert 12500&lt;mesh_stats['elements']&lt;50000<comment>If we had all equilateral triangles of area 5e-4, we'd get 25000 triangles. This test limits the *average* cell area.</comment></test>
  </pass_tests>
</testproblem>

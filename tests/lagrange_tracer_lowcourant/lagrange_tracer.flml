<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">lagrange_tracer</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="2element_square">
        <format name="gmsh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">0</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <include_in_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">1</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <output_mesh name="CoordinateMesh"/>
    <stat>
      <output_at_start/>
    </stat>
  </io>
  <particles>
    <particle_group name="Particles">
      <particle_subgroup name="SingleParticle">
        <initial_position>
          <python>
            <string_value type="code" language="python" lines="20">def val(t):
   coords = [[2./3., 1./3.]]
   return coords</string_value>
          </python>
        </initial_position>
        <attributes>
          <scalar_attribute name="field">
            <python_fields>
              <string_value type="code" language="python" lines="20">def val(X, t, dt, fields):
  return fields["Field"]</string_value>
            </python_fields>
          </scalar_attribute>
        </attributes>
      </particle_subgroup>
    </particle_group>
    <moving_outside_domain>
      <delete_outside_domain/>
    </moving_outside_domain>
    <lagrangian_timestepping>
      <subcycles>
        <integer_value rank="0">1</integer_value>
      </subcycles>
      <search_tolerance>
        <real_value rank="0">1.0e-10</real_value>
      </search_tolerance>
      <explicit_runge_kutta_guided_search>
        <n_stages>
          <integer_value rank="0">4</integer_value>
        </n_stages>
        <stage_weights>
          <real_value rank="1" shape="6">0.5 0. 0.5 0. 0. 1</real_value>
        </stage_weights>
        <timestep_weights>
          <real_value rank="1" shape="4">0.16666666666666666 0.3333333333333333
 0.3333333333333333 0.16666666666666666</real_value>
        </timestep_weights>
      </explicit_runge_kutta_guided_search>
    </lagrangian_timestepping>
  </particles>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.1</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">10.0</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">1</integer_value>
    </final_timestep>
  </timestepping>
  <physical_parameters/>
  <material_phase name="Dummy">
    <vector_field rank="1" name="Velocity">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   from math import sqrt
   return (-1./3., 1./3.)</string_value>
          </python>
        </value>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </vector_field>
    <scalar_field rank="0" name="Field">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X,t):
   if(X[1]&lt;0.5):
      return 1.0
   else:
      return 2.0</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <include_in_particles/>
        </particles>
      </prescribed>
    </scalar_field>
  </material_phase>
</fluidity_options>

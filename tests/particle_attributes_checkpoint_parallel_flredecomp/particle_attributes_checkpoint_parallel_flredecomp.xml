<?xml version="1.0" encoding="UTF-8" ?>

<testproblem>
  <name>Testing of particle attribute parameters in serial with checkpointing</name>
  <owner userid="cmath"/>
  <tags>flml</tags>
  <problem_definition length="short" nprocs="4">
    <command_line>
mpiexec ../../bin/flredecomp -i 1 -o 4 -v -l particle-attributes P4_particle-attributes &amp;&amp;
mpiexec ../../bin/fluidity -v3 -l P4_particle-attributes.flml &amp;&amp;
mpiexec ../../bin/flredecomp -i 4 -o 1 -v -l particle_attributes_1_checkpoint particle-attributes-flredecomp &amp;&amp;
../../bin/fluidity -v3 -l particle-attributes-flredecomp.flml
    </command_line>
  </problem_definition>

  <variables>
    <variable name="attributes_error_1" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes_checkpoint.particles.Thomas.h5part', 'r')
n = len(f)-1
att_chem1 = f['/Step#{}/Chem1'.format(n)][:]
attributes_error = att_chem1 - 5.0
attributes_error_1=abs(attributes_error).max()

print ("max error",attributes_error_1)
    </variable>
    <variable name="attributes_error_2" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes_checkpoint.particles.Thomas.h5part', 'r')
d = f['/Step#{}'.format(len(f)-2)]
idx = np.argsort(d['id'])
pos = np.vstack((d['x'], d['y']))[:,idx]
elapsed_time = d.attrs['time'].item()
d = f['/Step#{}'.format(len(f)-1)]
idx = np.argsort(d['id'])
att_chem2 = d['Chem2'][:][idx]

attributes_error = np.zeros(60)
for i in range(60):
    OldTemp = 2.0 - np.sin(elapsed_time*np.pi/2.0)/2.0
    attributes_error[i] = att_chem2[i] - OldTemp

attributes_error_2=abs(attributes_error).max()
print ("max error",attributes_error_2)
    </variable>
    <variable name="attributes_error_3" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes_checkpoint.particles.Chris.h5part', 'r')
d = f['/Step#{}'.format(len(f)-1)]
xpos = d['x'][:]
att_chem1 = d['Chem1'][:]
elapsed_time = d.attrs['time'].item()

attributes_error = att_chem1 - (xpos + elapsed_time)
attributes_error_3=abs(attributes_error).max()
print ("max error",abs(attributes_error_3).max())
    </variable>
    <variable name="sq_error_4" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes_checkpoint.particles.Chris.h5part', 'r')
d = f['/Step#{}'.format(len(f)-1)]
pos = np.vstack((d['x'], d['y']))
att_chem2 = d['Chem2'][:]
elapsed_time = d.attrs['time'].item()

attributes_error_4 = np.zeros((1,100))
sq_error=0

for i in range(100):
    Temp = 2.0 - np.sin(elapsed_time*np.pi/2.0)/2.0
    Salinity = 2.0 - pos[1,i]
    attributes_error_4[0,i] = att_chem2[i] - (pos[0,i] + elapsed_time + Salinity + Temp)
    sq_error = sq_error + attributes_error_4[0,i]**2
sq_error_4 = sq_error
    </variable>
    <variable name="attributes_error_5" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes_checkpoint.particles.Chris.h5part', 'r')
d = f['/Step#{}'.format(len(f)-1)]
idx = np.argsort(d['id'])
att_chem3 = d['Chem3'][:][idx]
d = f['/Step#{}'.format(len(f)-2)]
idx = np.argsort(d['id'])
att_chem2 = d['Chem2'][:][idx]

attributes_error = att_chem3 - att_chem2
attributes_error_5=abs(attributes_error).max()
print ("max error",attributes_error_5)
    </variable>
    <variable name="sq_error_6" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes_checkpoint.particles.Steph.h5part', 'r')
d = f['/Step#{}'.format(len(f)-1)]
idx = np.argsort(d['id'])
pos = np.vstack((d['x'], d['y']))[:,idx]
att_chem4 = d['Chem4'][:][idx]
newtime = d.attrs['time'].item()
d = f['/Step#{}'.format(len(f)-2)]
idx = np.argsort(d['id'])
old_pos = np.vstack((d['x'], d['y']))[:,idx]
oldtime = d.attrs['time'].item()

attributes_error_6 = np.zeros((1,80))
sq_error = 0

for i in range(80):
    Temp = 2.0 - np.sin(newtime*np.pi/2.0)/2.0
    OldTemp = 2.0 - np.sin(oldtime*np.pi/2.0)/2.0
    attributes_error_6[0,i] = att_chem4[i] - (Temp - OldTemp)
    sq_error = sq_error + attributes_error_6[0,i]**2

sq_error_6 = sq_error
    </variable>
    <variable name="old_attribute_error" language="python">
import numpy as np
import h5py

f = h5py.File('particle_attributes_checkpoint.particles.BMW.h5part', 'r')
n = len(f)-1

att_dt = f['/Step#{}/dt'.format(n)][:]

attributes_error = att_dt - 0.01
old_attribute_error = abs(attributes_error).max()
print ("max old attribute error",old_attribute_error)
    </variable>
    <variable name="Walltime" language="python">
from fluidity_tools import stat_parser
import numpy as np

s = stat_parser('particle_attributes_checkpoint.stat')
Walltime = s['ElapsedWallTime']["value"][-1]
print ("Total wall time", Walltime)
    </variable>
  </variables>

  <pass_tests>
    <test name="Maxattribteserror1" language="python">
assert abs(attributes_error_1).max() &lt; 1.0e-5
    </test>
    <test name="Maxattribteserror2" language="python">
assert abs(attributes_error_2).max() &lt; 1.0e-5
    </test>
    <test name="Maxattribteserror3" language="python">
assert abs(attributes_error_3).max() &lt; 1.0e-5
    </test>
    <test name="Squaredattribteserror4" language="python">
assert sq_error_4 &lt; 1.0e-3
    </test>
    <test name="Maxattribteserror5" language="python">
assert abs(attributes_error_5).max() &lt; 1.0e-5
    </test>
    <test name="Squaredattribteserror6" language="python">
assert sq_error_6 &lt; 1.0e-3
    </test>
    <test name="OldAttributeError" language="python">
assert old_attribute_error &lt; 1.0e-12
    </test>
  </pass_tests>

  <warn_tests>
  </warn_tests>

</testproblem>

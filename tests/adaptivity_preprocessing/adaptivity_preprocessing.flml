<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">adaptivity_preprocessing</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="box">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">2</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">1</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <output_mesh name="VelocityMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">1.0</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">3.0</real_value>
    </finish_time>
  </timestepping>
  <physical_parameters/>
  <material_phase name="Fluid">
    <vector_field rank="1" name="Velocity">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
          </constant>
        </value>
        <output>
          <exclude_from_vtu/>
        </output>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
      </prescribed>
    </vector_field>
    <scalar_field rank="0" name="Tracer">
      <prognostic>
        <mesh name="CoordinateMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <advection_scheme>
              <none/>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <diffusion_scheme>
              <bassi_rebay/>
            </diffusion_scheme>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.0</real_value>
          </theta>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <start_from_zero/>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(x, t):
	from numpy import pi, sin, sqrt
	r = sqrt((x[0] - 0.5) ** 2 + (x[1] - 0.5) ** 2)

	if r &lt; 0.5:
		return sin(4.0*pi*r)
	else:
		return 0.0</string_value>
          </python>
        </initial_condition>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <particles>
          <exclude_from_particles/>
        </particles>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">0.1</real_value>
                  </constant>
                </value>
                <output/>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
                <particles>
                  <exclude_from_particles/>
                </particles>
              </prescribed>
            </scalar_field>
            <p_norm>
              <integer_value rank="0">2</integer_value>
            </p_norm>
          </absolute_measure>
          <preprocessing>
            <helmholtz_smoother>
              <smoothing_scale_factor>
                <real_value rank="0">2.0</real_value>
              </smoothing_scale_factor>
              <solver>
                <iterative_method name="cg"/>
                <preconditioner name="sor"/>
                <relative_error>
                  <real_value rank="0">1.0e-7</real_value>
                </relative_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
            </helmholtz_smoother>
          </preprocessing>
        </adaptivity_options>
        <galerkin_projection>
          <continuous>
            <solver>
              <iterative_method name="cg"/>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1.0e-10</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
          </continuous>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
  </material_phase>
  <mesh_adaptivity>
    <hr_adaptivity>
      <period_in_timesteps>
        <integer_value rank="0">1</integer_value>
      </period_in_timesteps>
      <maximum_number_of_nodes>
        <integer_value rank="0">1000</integer_value>
      </maximum_number_of_nodes>
      <enable_gradation/>
      <tensor_field name="MinimumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="2 2">0.05 0.0 0.0 0.05</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
      <tensor_field name="MaximumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="2 2">0.5 0.0 0.0 0.5</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
    </hr_adaptivity>
  </mesh_adaptivity>
</fluidity_options>

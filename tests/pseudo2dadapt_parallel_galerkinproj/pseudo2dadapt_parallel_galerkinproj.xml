<?xml version='1.0' encoding='UTF-8'?>
<testproblem>
  <name>water collapse 2d</name>
  <owner userid="cwilson"/>
  <tags>flml</tags>
    <problem_definition length="medium" nprocs="2">
    <command_line>mpiexec fluidity -v2 -l water_collapse.flml</command_line>
  </problem_definition>  
  <variables>  
    <variable name="log_n_lines" language="python">
import glob
files = glob.glob1(".","*.log-?")
log_n_lines = {}
for file in files:
  fileHandle = open(file)
  log = fileHandle.read()
  logSplit = log.split("\n")
  print(file + ":")
  for line in logSplit[-10:]:
    print(line)
  log_n_lines[file] = len(logSplit)
  fileHandle.close()
    </variable>
    <variable name="err_n_lines" language="python">
import glob
files = glob.glob1(".","*.err-?")
err_n_lines = {}
for file in files:
  fileHandle = open(file)
  log = fileHandle.read()
  logSplit = log.split("\n")
  print(file + ":")
  for line in logSplit[-10:]:
    print(line)
  err_n_lines[file] = len(logSplit)
  fileHandle.close()
    </variable>
    <variable name="minvfrac" language="python">
from fluidity_tools import stat_parser as stat
minvfrac= max(stat("water_collapse.stat")["Dense"]["MaterialVolumeFraction"]["min"])
    </variable>
    <variable name="maxvfrac" language="python">
from fluidity_tools import stat_parser as stat
maxvfrac = max(stat("water_collapse.stat")["Dense"]["MaterialVolumeFraction"]["max"])
    </variable>
    <variable name="vfracintstart" language="python">
from fluidity_tools import stat_parser as stat
vfracintstart= stat("water_collapse.stat")["Dense"]["MaterialVolumeFraction"]["integral"][0]
    </variable>
    <variable name="vfracintend" language="python">
from fluidity_tools import stat_parser as stat
vfracintend= stat("water_collapse.stat")["Dense"]["MaterialVolumeFraction"]["integral"][-1]
    </variable>
    <variable name="nodesstart" language="python">
from fluidity_tools import stat_parser as stat
nodesstart= stat("water_collapse.stat")["CoordinateMesh"]["nodes"][0]
    </variable>
    <variable name="nodesend" language="python">
from fluidity_tools import stat_parser as stat
nodesend= stat("water_collapse.stat")["CoordinateMesh"]["nodes"][-1]
    </variable>
    <variable name="numbertimesteps" language="python">
from fluidity_tools import stat_parser as stat
numbertimesteps= len(stat("water_collapse.stat")["CoordinateMesh"]["nodes"])
    </variable>
  </variables>    
  <pass_tests>
    <test name="check water was conserved" language="python">
print('mass loss = ', abs(vfracintend-vfracintstart))
assert abs(vfracintend-vfracintstart) &lt; 1.E-7
    </test>
<!--    <test name="check max volume fraction bound" language="python">
assert abs(maxvfrac-1.0) &lt; 1.E-10
    </test>-->
    <test name="check min volume fraction bound" language="python">
assert abs(minvfrac) &lt; 1.E-10
    </test>
    <test name="check no. nodes has increased" language="python">
assert nodesend-nodesstart &gt; 0.0
    </test>
    <test name="check no. timesteps" language="python">
assert abs(numbertimesteps-4) &lt; 1.E-9
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

<?xml version='1.0' encoding='UTF-8'?>
<!-- Calculate wave speed in sloshing deep water tank
  -->
<testproblem>
  <name>Wave speed sloshing water of large depth</name>
  <owner userid="piggott"/>
  <tags>flml</tags>
  <problem_definition length="medium" nprocs="1">
    <command_line>fluidity -v3 -l sloshing_tank_deep.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
    </variable>
    <variable name="wave_speed" language="python">
import h5py
import numpy as np

f = h5py.File('sloshing_tank_deep.detectors.h5part', 'r')
l1 = len(f)
fs = np.fromiter((f[f'/Step#{i}/water%FreeSurface'][0] for i in range(l1)), np.float)
for i in range(l1-1, -1, -1):
  if fs[i] &gt; fs[i-1]:
    break
time = f[f'/Step#{i+1}'].attrs['time'].item()
print("Time found for 10th peak in free surface: %s" % time)
wave_speed = 10.0/time
print("This implies a free surface speed of: %s" % wave_speed)
</variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">
      assert(solvers_converged)
    </test>
    <test name="Check that computed wave speed has an error less than 1.0% compared to the theoretical linear dispersion relation value (0.563137)." language="python">
print (abs(wave_speed -  0.563137)/wave_speed)
assert((abs(wave_speed -  0.563137)/wave_speed) &lt; 0.01)
    </test>
  </pass_tests>
  <warn_tests>
  </warn_tests>
</testproblem>

<?xml version="1.0" encoding="utf-8" ?>
<testproblem>
  <name>p1p1-Stokes-square-convection-1e4</name>
  <owner userid="rhodrid"/>

  <tags>flml</tags>

  <problem_definition length="medium" nprocs="1">
    <command_line>fluidity -v2 -l Stokes-square-convection-1e4-p1p1.flml</command_line>
  </problem_definition>

<variables>  
  <variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
  </variable>

<variable name="nu_top" language="python">
from fluidity_tools import stat_parser as stat
nu_top = abs(stat("stokes-1e4-p1p1.stat")["Fluid"]["Temperature"]["surface_integral%TopH"][-1])
</variable>

<variable name="max_div" language="python">
from fluidity_tools import stat_parser as stat
max_div = max(max(abs(stat("stokes-1e4-p1p1.stat")["Fluid"]["FiniteElementDivergence"]["max"])), max(abs(stat("stokes-1e4-p1p1.stat")["Fluid"]["FiniteElementDivergence"]["min"])))
</variable>

<variable name="rms_vel" language="python">
from fluidity_tools import stat_parser as stat
rms_vel= stat("stokes-1e4-p1p1.stat")["Fluid"]["Velocity%magnitude"]["l2norm"][-1]
</variable>

<variable name="q_one" language="python">
import h5py
import numpy as np

f = h5py.File('stokes-1e4-p1p1.detectors.h5part', 'r')
n = len(f)-1
topleft =  f.attrs['TopLeftCorner%ids'][0]-1
q_one = -f[f'/Step#{n}/Fluid%TemperatureGradient%y'][topleft]
</variable>

<variable name="q_two" language="python">
import h5py
import numpy as np

f = h5py.File('stokes-1e4-p1p1.detectors.h5part', 'r')
n = len(f)-1
topright =  f.attrs['TopRightCorner%ids'][0]-1
q_two = -f[f'/Step#{n}/Fluid%TemperatureGradient%y'][topright]
</variable>

</variables>

<pass_tests>
  <test name="Solvers converged" language="python">
    assert(solvers_converged)
  </test>

<test name="Surface Nusselt Number Validity: 4.7 .lt. Nu .lt. 5.3" language="python">
assert(abs(nu_top-5.0) &lt; 0.30)
</test>

<test name="RMS Velocity Validity: 43.0 .lt. V_RMS .lt. 46.0" language="python">
assert(abs(rms_vel-44.5) &lt; 1.5)
</test>

<test name="Divergence small .lt. 130" language="python">
assert(max_div &lt; 130)
</test>

<test name="Nondimensional Temp Gradient at TopLeftCorner Validity: 7.00 .lt. q_one .lt. 9.50" language="python">
assert(abs(q_two-8.0594) &lt; 1.50)
</test>

<test name="Nondimensional Temp Gradient at TopRightCorner Validity: 0.55 .lt. q_one .lt. 0.65" language="python">
assert(abs(q_one-0.5888) &lt; 0.05)
</test>

</pass_tests>                                                                                                                                                                                                

<warn_tests>
</warn_tests>

</testproblem>






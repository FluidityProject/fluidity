name: Focal Testing

on: 
  push:
    branches:
      - gcc10-fixes-debug-actions

jobs:

  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        name: [ "Build Bionic", "Build Focal", "Build Groovy" ]
        include:
        
          - name: "Build Bionic"
            release: bionic
    
          - name: "Build Focal"
            release: focal
    
          - name: "Build Groovy"
            release: groovy
    
    steps:

      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/actions/Dockerfile.actions.${{ matrix.release }}
          push: true
          tags: fluidity/actions:${{ matrix.release }}-${{ github.sha }}

  github-testing:

    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: build
  
    strategy:
      fail-fast: false
      matrix:
        name: [ "Unit Groovy", "Short Groovy", "Unit Bionic", "Short Bionic", "Unit Focal", "Short Focal" ]
        include:
        
          - name: "Unit Bionic"
            release: bionic
            command: "make unittest"
            output: "test_results_unittests.xml"
          
          - name: "Short Bionic"
            release: bionic
            command: "make test"
            output: "test_results.xml"

          - name: "Unit Focal"
            release: focal
            command: "make unittest"
            output: "test_results_unittests.xml"
          
          - name: "Short Focal"
            release: focal
            command: "make test"
            output: "test_results.xml"

          - name: "Unit Groovy"
            release: groovy
            command: "make unittest"
            output: "test_results_unittests.xml"
          
          - name: "Short Groovy"
            release: groovy
            command: "make test"
            output: "test_results.xml"

    steps:
    
      - name: ${{ matrix.name }}
        run: |
         chmod 777 .
         docker pull fluidity/actions:${{ matrix.release }}-${{ github.sha }}
         docker run -v $PWD:/host fluidity/actions:${{ matrix.release }}-${{ github.sha }} /bin/bash -c "${{ matrix.command }} && cp -v tests/${{ matrix.output }} /host/${{ matrix.release }}-${{ matrix.output}}"

      - uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.release }}-${{ matrix.output }}

  remote-testing:

    name: "Medium Bionic"
    runs-on: self-hosted
    needs: build
    timeout-minutes: 1440

    strategy:
      fail-fast: false
      matrix:
        name: [ "Medium Bionic", "Medium Focal", "Medium Groovy" ]
        include:
        
          - name: "Medium Bionic"
            release: bionic
    
          - name: "Medium Focal"
            release: focal
    
          - name: "Medium Groovy"
            release: groovy
    
    steps:

      - uses: colpal/actions-clean@v1
        if: ${{ always() }}
    
      - name: ${{ matrix.name }}
        run: |
         chmod 777 .
         docker pull fluidity/actions:${{ matrix.release }}-${{ github.sha }}
         docker run -v $PWD/results:/host fluidity/actions:${{ matrix.release }}-${{ github.sha }} /bin/bash -c "make mediumtest && cp -v tests/test_results_medium.xml /host/${{ matrix.release }}-test_results_medium.xml"

      - uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.release }}-test_results_medium.xml

      - uses: colpal/actions-clean@v1
        if: ${{ always() }}
      
  JUnit:

    name: JUnit publishing Bionic
    runs-on: ubuntu-latest
    if: always()
    needs: [ github-testing, remote-testing ]

    strategy:
      fail-fast: false
      matrix:
        name: [ "JUnit Bionic", "JUnit Focal", "JUnit Groovy" ]
          
        include:
        
          - name: "JUnit Bionic"
            release: bionic
    
          - name: "JUnit Focal"
            release: focal
    
          - name: "JUnit Groovy"
            release: groovy
    
    steps:

      - uses: actions/download-artifact@v2

      - name: ${{ matrix.name }}
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/${{ matrix.release }}-test*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Test report ${{ matrix.release }}
          fail_on_failure: true

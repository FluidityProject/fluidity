name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        name: [ Build Bionic, Build Focal ]
        include:

          - name: Build Bionic
            release: bionic

          - name: Build Focal
            release: focal

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/actions/Dockerfile.actions.${{ matrix.release }}
          push: true
          tags: fluidity/actions:${{ matrix.release }}-${{ github.sha }}

  single_test:

    name: single_test-${{ matrix.distro }}
    runs-on: ubuntu-latest
    needs: build
    if: always()

    strategy:
      fail-fast: false
      matrix:
        distro: [bionic, focal]

    steps:

      - name: ${{ matrix.distro }} Single_test
        run: |
         chmod 777 .
         docker pull fluidity/actions:${{ matrix.distro }}-${{ github.sha }}
         docker run -v $PWD:/host fluidity/actions:${{ matrix.distro }}-${{ github.sha }} \
         /bin/bash -c "bin/testharness -x test_results_${{ matrix.distro }}.xml -f top_hat_cv.xml && \
         cp -v test_results_${{ matrix.distro }}.xml /host"
      - uses: actions/upload-artifact@v2
        with:
          path: test_results_${{ matrix.distro }}.xml
          name: tests_xml_outputs

      - name: ${{ matrix.distro }} JUnit
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: test_results_${{ matrix.distro }}.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Single_test report ${{ matrix.distro }}
          fail_on_failure: true

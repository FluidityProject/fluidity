name: Build and test

on:
  push:
    branches:
      - deprecate_distutils_2

jobs:

  build:
    name: Build - ${{ matrix.distribution }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        distribution: [bionic, focal]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/actions/Dockerfile.actions.${{ matrix.distribution }}
          push: true
          tags: fluidity/actions:${{ matrix.distribution }}-${{ github.sha }}

  unit-test:
    name: Unit Tests - ${{ matrix.distribution }}
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        distribution: [bionic, focal]
        output: [test_results_unittests.xml]

    steps:
      - name: Run tests
        run: |
          chmod 777 .
          docker pull fluidity/actions:${{ matrix.distribution }}-${{ github.sha }}
          docker run -v $PWD:/host fluidity/actions:${{ matrix.distribution }}-${{ github.sha }} \
          /bin/bash -c "make unittest &&
          cp -v tests/${{ matrix.output }} /host/${{ matrix.distribution }}-${{ matrix.output }}"

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.distribution }}-${{ matrix.output }}
          name: xml_outputs

      - name: Publish test report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: ${{ matrix.distribution }}-${{ matrix.output }}
          token: ${{ secrets.GITHUB_TOKEN }}
          check_name: JUnit Test Report - Unit Tests - ${{ matrix.distribution }}
          fail_on_failure: true

  short-test:
    name: Short Tests - ${{ matrix.distribution }}
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        distribution: [bionic, focal]
        output: [test_results.xml]

    steps:
      - name: Run tests
        run: |
          chmod 777 .
          docker pull fluidity/actions:${{ matrix.distribution }}-${{ github.sha }}
          docker run -v $PWD:/host fluidity/actions:${{ matrix.distribution }}-${{ github.sha }} \
          /bin/bash -c "make THREADS=2 test &&
          cp -v tests/${{ matrix.output }} /host/${{ matrix.distribution }}-${{ matrix.output }}"

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.distribution }}-${{ matrix.output }}
          name: xml_outputs

      - name: Publish test report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: ${{ matrix.distribution }}-${{ matrix.output }}
          token: ${{ secrets.GITHUB_TOKEN }}
          check_name: JUnit Test Report - Short Tests - ${{ matrix.distribution }}
          fail_on_failure: true

name: Build and Test

on:
  push:
    branches:
      - gcc10-fixes-plus-longtests
  pull_request:
    branches:
      - gcc10-fixes-plus-longtests

jobs:

  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        name: [ "Build Focal" ]
        include:
        
          - name: "Build Focal"
            release: focal
    
    steps:

      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/actions/Dockerfile.actions.${{ matrix.release }}
          push: true
          tags: fluidity/actions:${{ matrix.release }}-${{ github.sha }}

  testing:

    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: build
    if: always()

    strategy:
      fail-fast: false
      matrix:
        name: ["mms_tracer_P1dg_cdg_diff_steady", "mms_tracer_cg_supg_advdiff_steady", "para_eddy", "mphase_mms_p2p1_compressible_ie_p1cv", "mms_rans_p1dgp2_keps", "open_ocean_deep_convection-parallel", "mms_ns_p1p1stabilised_steady", "mms_rans_p2p1_keps_linearmomentum", "saltfinger2d_adaptive", "lock_exchange_3d", "water_collapse_2d_valgrind", "mms_ns_p1dgp2_steady_periodic_parallel", "spherical_benchmark_free_slip", "mms_tracer_p0_adv_steady_conservative", "mms_ns_p1dgp2_steady_periodic", "mms_tracer_cg_advdiff_steady", "gls-MixedLayer", "mms_rans_p1dgp2_upw_keps", "lock_exchange_3d_dg", "sphere-3D-drag-Re100", "gls-StationPapa", "lock_exchange_2d_Lagrangian_paths", "mms_ns_cg_steady", "mphase_tephra_settling_salinity", "spherical_benchmark_no_slip_p2bp1dg", "mphase_mms_p2p1_compressible", "lagrangian_detectors_3d_2e5", "mphase_mms_p2p1_vfrac", "mms_ns_p2lp1_steady_compressible", "explicit-hyperc-shear", "mms_tracer_P1dg_br_diff_steady", "medp1dgp2", "sphere-3D-drag-Re1000", "mphase_mms_p1dgp2_br", "mphase_mms_p2p1_compressible_ie_heat_transfer", "coarse-corner", "spherical_benchmark_free_slip_p2bp1dg", "mphase_mms_p2p1_compressible_ie_p1cv_heat_transfer", "mphase_mms_p2p1_compressible_ie", "Stokes_mms_p1dg_p2", "mms_ns_p0p1_steady_periodic", "backward_facing_step_2d_longtest", "mms_tracer_cv_advdiff_eg_steady", "explicit-hyperc-shear-adapt", "backward_facing_step_3d_longtest", "mphase_tephra_settling_salinity_adaptive", "mms_ns_p1p1stabilised_supg_steady", "mms_rans_p2p1_keps_lowRe", "sphere-3D-drag-Re1", "Stokes_subduction_zone_vanKeken2008_TwoB", "flredecomp_long", "mphase_rans_p1dgp2_cv_bubble_column_2D", "lock_exchange_3d_parallel", "mms_tracer_cv_diff_eg_steady", "mphase_mms_p0p1cv_periodic", "mms_tracer_cv_diff_steady_structured", "mms_rans_p2p1_keps_linearmomentum_cv", "mms_ns_p1lp1cv_steady_compressible", "flow_past_a_square", "explicit-hyperc-superman", "Stokes_subduction_zone_vanKeken2008_OneA", "Stommel_tracer_advection", "mphase_mms_p1dgp2_cdg", "mms_tracer_cv_diff_steady", "mms_tracer_p0_adv_steady", "square-convection-1e6", "mms_ns_p0p1cv_steady_periodic", "mms_ns_p2lp1_supg_steady_compressible", "mphase_mms_p2p1_no_interactions", "spherical_benchmark_smooth_no_slip", "mms_ns_dg_steady", "mphase_mms_p1dgp2_fpdrag", "mms_tracer_cv_advdiff_steady", "lituya_bay_parallel_debug", "stagnant_conical_island", "spherical_benchmark_smooth_free_slip", "spherical_benchmark_no_slip", "wetting_and_drying_balzano1_dg_parallel", "lituya_bay_pseudo2dadapt", "sphere-3D-drag-Re10", "wetting_and_drying_thacker_dg_parallel", "pseudo2dadapt_parallel_galerkinproj", "backward_facing_step_2d", "backward_facing_step_3d", "driven_cavity", "flow_past_sphere_Re1", "flow_past_sphere_Re10", "flow_past_sphere_Re100", "flow_past_sphere_Re1000", "lock_exchange", "particle_rayleigh_taylor_mu10", "rotating_channel", "tephra_settling", "top_hat", "water_collapse"]

    steps:

      - name: ${{ matrix.name }} Testing
        run: |
         chmod 777 .
         docker pull fluidity/actions:focal-${{ github.sha }}
         docker run -v $PWD:/host fluidity/actions:focal-${{ github.sha }} /bin/bash -c "git clone https://github.com/fluidityproject/longtests && bin/testharness -x test_results_${{ matrix.name }}.xml -f ${{ matrix.name }}.xml && cp -v test_results_${{ matrix.name }}.xml /host"

      - uses: actions/upload-artifact@v2
        with:
          path: test_results_${{ matrix.name }}.xml
          name: tests_xml_outputs

      - name: ${{ matrix.name }} JUnit
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: test_results_${{ matrix.name }}.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Test report ${{ matrix.name }}
          fail_on_failure: true

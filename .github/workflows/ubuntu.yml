name: Build and Test

on:
  push:
    branches:
      - gcc10-fixes-plus-longtests
  pull_request:
    branches:
      - gcc10-fixes-plus-longtests

jobs:

  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        name: [ "Build Focal" ]
        include:
        
          - name: "Build Focal"
            release: focal
    
    steps:

      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/actions/Dockerfile.actions.${{ matrix.release }}
          push: true
          tags: fluidity/actions:${{ matrix.release }}-${{ github.sha }}

  testing:

    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: build
    if: always()

    strategy:
      fail-fast: false
      matrix:
        name: [
                #"saltfinger2d_adaptive",
                "gls-StationPapa"
                #"lock_exchange_2d_Lagrangian_paths", 
                #"lagrangian_detectors_3d_2e5", 
                #"medp1dgp2", 
                #"coarse-corner", 
                #"Stokes_mms_p1dg_p2", 
                #explicit-hyperc-shear-adapt"
                #"Stokes_subduction_zone_vanKeken2008_TwoB",
                #"lock_exchange_3d_parallel", 
                #"explicit-hyperc-superman"
                #"Stokes_subduction_zone_vanKeken2008_OneA", 
                #"square-convection-1e6", 
                #"wetting_and_drying_balzano1_dg_parallel", 
                #"lock_exchange"
                #"particle_entrainment_of_dense_layer",
                #"driven_cavity",
                #"hokkaido-nansei-oki_tsunami"

              ]


    steps:

      - name: ${{ matrix.name }} Testing
        run: |
         chmod 777 .
         docker pull fluidity/actions:focal-${{ github.sha }}
         docker run -v $PWD:/host fluidity/actions:focal-${{ github.sha }} /bin/bash -c "git clone https://github.com/fluidityproject/longtests && bin/testharness -x test_results_${{ matrix.name }}.xml -f ${{ matrix.name }}.xml && cp -v test_results_${{ matrix.name }}.xml /host"

      - uses: actions/upload-artifact@v2
        with:
          path: test_results_${{ matrix.name }}.xml
          name: tests_xml_outputs

      - name: ${{ matrix.name }} JUnit
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: test_results_${{ matrix.name }}.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Test report ${{ matrix.name }}
          fail_on_failure: true

include "spud_base.rnc"

start =
   (
      element ballistics_options {
         ## The name of the simulation.
         ## This will be used as the basename of output files. 
         element simulation_name {
            filename
         },
         # Timestepping_options is a named pattern defined below. 
         timestepping_options,
         ## The acceleration due to gravity measured downwards.
         element gravity {
            real
         },
         projectile+, # The + means one or more projectiles.
         element geometry {
            ## Only 2D simulations are suppored by ballistics.
            element dimension {
               element integer_value {
                  attribute rank {"0"},
                  "2"
               }
            }
         }
      }
   )

timestepping_options =
   (
      element timestepping {
         ## The length of each timestep.
         element dt {
            real
         },
         ## The time at which the simulation should stop.
         element finish_time {
            real
         },
         ## The algorithm which will be used to move the projectiles. 
         ## explicit_euler is the first order unstable numeric scheme.
         ## analytic is the analytic solution.
         element time_integration_scheme {
            element string_value {
               # Lines is a hint to the gui about the size of the text box.
               # It is not an enforced limit on string length.
               attribute lines { "1" },
               ( "explicit_euler" | "analytic" )
            }
         }
      }
   )

projectile = 
   (
      element projectile {
         ## An object with a velocity. Projectiles move during the simulation 
         ## and are accelerated by gravity.
         ## 
         ## The projectile name identifies this projectile in the output.
         attribute name { string },
         element initial_velocity {
            ## Velocity of the projectile at launch.
            real_dim_vector
         },
         element launch_position {
            ## Position along the x axis at which the projectile begins.
            real_dim_minus_one_vector
         }
      }
   )


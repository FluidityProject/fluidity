#    Copyright (C) 2006 Imperial College London and others.
#
#    Please see the AUTHORS file in the main source directory for a full list
#    of copyright holders.
#
#    Prof. C Pain
#    Applied Modelling and Computation Group
#    Department of Earth Science and Engineering
#    Imperial College London
#
#    amcgsoftware@imperial.ac.uk
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation,
#    version 2.1 of the License.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
#    USA

SHELL = @SHELL@

PACKAGE_NAME = @PACKAGE_NAME@
FLUIDITY = $(PACKAGE_NAME)

FC      = @FC@
FCFLAGS = -I../include @MOD_FLAG@../include @CPPFLAGS@ @FCFLAGS@  -I../libwm -I/usr/local/include -I./

MPIF90  = @MPIF90@

CC      = @CC@
CFLAGS  = @CPPFLAGS@ @CFLAGS@ -I../include -I../libwm -I/usr/local/include

CXX     = @CXX@
CXXFLAGS= @CPPFLAGS@ @CXXFLAGS@ -I../include -I../libwm  -I../libvtkfortran/include -I/usr/local/include

LINKER  = @LINKER@ @LDFLAGS@

MAKE    = @MAKE@

AR = @AR@
ARFLAGS = @ARFLAGS@

UNROLL_LOOPS = @UNROLL_LOOPS@

LIB = ../lib/lib$(FLUIDITY).a 

F90LIB = libfemtools.a

LIBS    = -L/usr/lib/ -lnetcdf -L../lib -l$(FLUIDITY) @LIBS@ @BLAS_LIBS@

TESTLIBS = $(shell echo @LIBS@ | sed 's@./lib/lib\([a-z]*\)\.a@-l\1@g')

OBJS = Dgtools.o Coordinates.o EventCounter.o \
  Elements.o Sparse_Tools.o Quadrature.o Quadrature_Test.o Futils.o		\
  Polynomials.o Adjacency_Lists.o Element_Numbering.o Global_Numbering.o \
  Shape_Functions.o Shape_Functions_Test.o Signals.o Signal_Vars.o signal_handlers.o		\
  Global_Parameters.o Timers.o Transform_elements.o VTK_interfaces.o \
  Fields.o FETools.o FEFields.o Vector_Tools.o Read_Triangle.o \
  Timers.o Transform_elements.o Petsc_Tools.o Solvers.o Linked_Lists.o	\
  Sparsity_Patterns.o Sparsity_Patterns_Meshes.o State.o Tensors.o \
  Superconvergence.o Unittest_tools.o Fields_Data_Types.o Multigrid.o	\
  ieee_arithmetic_dummy.o ieee_arithmetic_C99.o Diagnostic_variables.o	\
  Diagnostic_Fields.o SampleNetCDF_fortran.o \
  AuxilaryOptions.o MeshDiagnostics.o VTK_interfaces.o Surface_Labels.o	\
  ISCopyIndices.o Colouring.o \
  Field_derivatives.o Node_boundary.o Parallel_fields.o \
  Vector_set.o Element_set.o vecset.o intvecset.o eleset.o \
  Matrix_Norms.o embed_python.o Embed_Python_Fortran.o \
  external_function.o Reference_Counting.o \
  Tokenize.o Boundary_Conditions.o Write_Triangle.o \
  tictoc.o \
  CVTools.o CV_Fields.o CV_Face_Values.o CV_Upwind_Values.o CV_Shape_Functions.o CV_Faces.o \
  CV_Options.o Metric_tools.o \
  Merge_tensors.o Write_State.o Field_Options.o \
  Fields_Base.o Fields_Allocates.o Fields_Calculations.o Fields_Manipulation.o \
  Sparse_Matrices_Fields.o Unittest_Tools_Cpp.o Adaptive_Timestepping.o \
  Checkpoint.o Surface_Integrals.o\
  python_state.o python_statec.o Dynamic_Bin_Sort.o \
  Supermesh.o Supermesh_Assembly.o Conservative_interpolation.o \
  Interpolation.o Pseudo_Consistent_Interpolation.o Pseudo_2D.o DG_interpolation.o \
  Halo_Data_Types.o Halos.o Halos_Allocates.o Halos_Base.o \
  Halos_Communications.o Halos_Debug.o Halos_Derivation.o Halos_IO.o \
  Halos_Numbering.o Halos_Ownership.o Halos_Registration.o Halos_Repair.o \
  qsortd.o Element_Intersection.o Intersection_finder.o tri_predicate.o \
  tet_predicate.o Lagrangian_Remap.o \
  Detector_Data_Types.o Detector_Tools.o \
  Detector_Parallel.o Detector_Move_Lagrangian.o \
  Picker_Data_Types.o Pickers.o Pickers_Allocates.o \
  Pickers_Base.o Pickers_Deallocates.o Pickers_Inquire.o Smoothing_module.o \
  vtk_read_files.o State_Fields.o Unify_meshes.o Adaptive_interpolation.o \
  Wandzura_Quadrature.o Grundmann_Moeller_Quadrature.o Bound_field.o \
  Halos_Diagnostics.o Mixing_Statistics.o projections.o Memory_Diagnostics.o \
  Sparse_Tools_Petsc.o C_Interfaces.o C_Interfaces_Fortran.o Tetrahedron_intersection.o \
  Node_Owner_Finder.o Node_Owner_Finder_Fortran.o Node_Ownership.o \
  Data_structures.o Data_structures_C.o Integer_set.o Integer_hash_table.o \
  CGAL_Tools_C.o CGAL_Tools.o \
  Rotated_Boundary_Conditions.o MPI_Interfaces.o Parallel_Tools.o \
  Fields_Halos.o Profiler.o Profiler_Fortran.o Streamfunction.o \
  GMSH_Common.o Read_GMSH.o Write_GMSH.o \
  Exodusii_C_Interface.o Exodusii_F_Interface.o Exodusii_Common.o Read_Exodusii.o \
  Mesh_Files.o Vertical_Extrapolation.o \
  Mesh_Quality.o Mesh_Quality_C.o Particles.o Time_Period.o H5hut.o


# objects to be included in libfemtools:
F90LIB_OBJS := ../debug/*.o ../libwm/*.o  \
  $(OBJS)

.SUFFIXES: .F90 .cpp .c .o .a

# cancel implicit rule that tries to make .o from .mod with m2c:
%.o: %.mod

.F90.o:
	@echo "        FC $<"
	$(FC) $(FCFLAGS)  $(GENFLAGS) -c $< 
.c.o:
	@echo "        CC $<"
	$(CC) $(CFLAGS) -c $<
.cpp.o:
	@echo "        CXX $<"
	$(CXX) $(CXXFLAGS) -c $<

$(LIB): $(OBJS)
	@mkdir -p ../lib

default: $(LIB)

$(F90LIB): $(F90LIB_OBJS)
	@mkdir -p ../lib
	$(AR) $(ARFLAGS) $@ $(F90LIB_OBJS)

libfemtools: $(F90LIB)

clean:
	rm -f *.o *.d *.mod Reference_count_*.F90 $(F90LIB)

../include/version.h: version-info

version-info: 
	@$(MAKE) -C .. include/version.h

.PHONY: version-info

Reference_count_%.F90: Reference_count_interface_%.F90
	@true

Reference_count_interface_%.F90: Refcount_templates.F90 Refcount_interface_templates.F90
	@sed 's/REFCOUNT_TYPE/$*/' Refcount_templates.F90 > Reference_count_$*.F90
	@sed 's/REFCOUNT_TYPE/$*/' Refcount_interface_templates.F90 > Reference_count_interface_$*.F90

test_projections: projections.cpp
	$(CXX) $(CXXFLAGS) -DPROJECTIONS_UNIT_TEST -o $@ $^ $(LIBS)

Conservative_interpolation.o: Conservative_interpolation.F90 
	@echo "        FC $<"
	$(FC) $(FCFLAGS) $(UNROLL_LOOPS) $(GENFLAGS) -c $< || (rm $(LIB) && false)

FETools.o: FETools.F90 
	@echo "        FC $<"
	$(FC) $(FCFLAGS) $(UNROLL_LOOPS) $(GENFLAGS) -c $< || (rm $(LIB) && false)

# The refcount template dependencies are not actually needed for
# Reference_counting.o but they are needed by everything which depends on
# Reference_counting.o
Reference_Counting.o: \
  Refcount_templates.F90 Refcount_interface_templates.F90

test_element_numbering:test_element_numbering.F90 
	$(FC) $(FCFLAGS) -o $@ $^

testshapefunctions:testshapefunctions.F90 
	$(FC) $(FCFLAGS) -o $@ $^

testvectortools:testvectortools.F90 
	$(FC) $(FCFLAGS) -o $@ $^ $(LIBS)

test_laplacian:test_laplacian.F90 
	$(FC) $(FCFLAGS) -o $@ $^ $(LIBS)

include Makefile.dependencies
